/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../../common";
import type {
  RelayerProxy,
  RelayerProxyInterface,
} from "../../../../../../contracts/core/connext/helpers/RelayerProxy.sol/RelayerProxy";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "connext",
            type: "address",
          },
          {
            internalType: "address",
            name: "spokeConnector",
            type: "address",
          },
          {
            internalType: "address",
            name: "gelatoRelayer",
            type: "address",
          },
          {
            internalType: "address",
            name: "feeCollector",
            type: "address",
          },
          {
            internalType: "address",
            name: "keep3r",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "proposeAggregateRootCooldown",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "finalizeCooldown",
            type: "uint256",
          },
        ],
        internalType: "struct RelayerProxy.ConstructorParams",
        name: "_params",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__ownershipDelayElapsed_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "RelayerProxy__addRelayer_relayerAdded",
    type: "error",
  },
  {
    inputs: [],
    name: "RelayerProxy__definedAddress_empty",
    type: "error",
  },
  {
    inputs: [],
    name: "RelayerProxy__finalizeCooledDown_notCooledDown",
    type: "error",
  },
  {
    inputs: [],
    name: "RelayerProxy__isWorkableBySender_notWorkable",
    type: "error",
  },
  {
    inputs: [],
    name: "RelayerProxy__onlyRelayer_notRelayer",
    type: "error",
  },
  {
    inputs: [],
    name: "RelayerProxy__proposeAggregateRootCooledDown_notCooledDown",
    type: "error",
  },
  {
    inputs: [],
    name: "RelayerProxy__removeRelayer_relayerNotAdded",
    type: "error",
  },
  {
    inputs: [],
    name: "RelayerProxy__validateAndPayWithCredits_notKeep3r",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "signer",
        type: "address",
      },
    ],
    name: "RelayerProxy__validateProposeSignature_notProposer",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "updated",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
    ],
    name: "ConnextChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "updated",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
    ],
    name: "FeeCollectorChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "finalizeCooldown",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "oldFinalizeCooldown",
        type: "uint256",
      },
    ],
    name: "FinalizeCooldownChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "FundsDeducted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "FundsReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "updated",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
    ],
    name: "GelatoRelayerChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "updated",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
    ],
    name: "Keep3rChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "proposeAggregateRootCooldown",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "oldProposeAggregateRootCooldown",
        type: "uint256",
      },
    ],
    name: "ProposeAggregateRootCooldownChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "relayer",
        type: "address",
      },
    ],
    name: "RelayerAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "relayer",
        type: "address",
      },
    ],
    name: "RelayerRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "updated",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
    ],
    name: "SpokeConnectorChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_relayer",
        type: "address",
      },
    ],
    name: "addRelayer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowedRelayer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "connext",
    outputs: [
      {
        internalType: "contract IConnext",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "domain",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint32",
                name: "originDomain",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "destinationDomain",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "canonicalDomain",
                type: "uint32",
              },
              {
                internalType: "address",
                name: "to",
                type: "address",
              },
              {
                internalType: "address",
                name: "delegate",
                type: "address",
              },
              {
                internalType: "bool",
                name: "receiveLocal",
                type: "bool",
              },
              {
                internalType: "bytes",
                name: "callData",
                type: "bytes",
              },
              {
                internalType: "uint256",
                name: "slippage",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "originSender",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "bridgedAmt",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "normalizedIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "nonce",
                type: "uint256",
              },
              {
                internalType: "bytes32",
                name: "canonicalId",
                type: "bytes32",
              },
            ],
            internalType: "struct TransferInfo",
            name: "params",
            type: "tuple",
          },
          {
            internalType: "address[]",
            name: "routers",
            type: "address[]",
          },
          {
            internalType: "bytes[]",
            name: "routerSignatures",
            type: "bytes[]",
          },
          {
            internalType: "address",
            name: "sequencer",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "sequencerSignature",
            type: "bytes",
          },
        ],
        internalType: "struct ExecuteArgs",
        name: "_args",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes32",
        name: "transferId",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "feeCollector",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_proposedAggregateRoot",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_rootTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_endOfDispute",
        type: "uint256",
      },
    ],
    name: "finalize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "finalizeCooldown",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gelatoRelayer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "keep3r",
    outputs: [
      {
        internalType: "contract IKeep3rV2",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastFinalizeAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastProposeAggregateRootAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_aggregateRoot",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_rootTimestamp",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_signature",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "proposeAggregateRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposeAggregateRootCooldown",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "message",
            type: "bytes",
          },
          {
            internalType: "bytes32[32]",
            name: "path",
            type: "bytes32[32]",
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
        ],
        internalType: "struct ISpokeConnector.Proof[]",
        name: "_proofs",
        type: "tuple[]",
      },
      {
        internalType: "bytes32",
        name: "_aggregateRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32[32]",
        name: "_aggregatePath",
        type: "bytes32[32]",
      },
      {
        internalType: "uint256",
        name: "_aggregateIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "proveAndProcess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_relayer",
        type: "address",
      },
    ],
    name: "removeRelayer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_encodedData",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "_messageFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_relayerFee",
        type: "uint256",
      },
    ],
    name: "send",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_connext",
        type: "address",
      },
    ],
    name: "setConnext",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_feeCollector",
        type: "address",
      },
    ],
    name: "setFeeCollector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_finalizeCooldown",
        type: "uint256",
      },
    ],
    name: "setFinalizeCooldown",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_gelatoRelayer",
        type: "address",
      },
    ],
    name: "setGelatoRelayer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_keep3r",
        type: "address",
      },
    ],
    name: "setKeep3r",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_proposeCooldown",
        type: "uint256",
      },
    ],
    name: "setProposeAggregateRootCooldown",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spokeConnector",
        type: "address",
      },
    ],
    name: "setSpokeConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "spokeConnector",
    outputs: [
      {
        internalType: "contract ISpokeConnector",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002941380380620029418339810160408190526200003491620004f9565b6001600355620000443362000151565b80516200005190620001b6565b602081015162000061906200021f565b6040810151620000719062000288565b60608101516200008190620002f1565b608081015162000091906200035a565b60a0810151620000a190620003c3565b60c0810151620000b19062000405565b6040810151620000c19062000447565b80602001516001600160a01b03166352a9674b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000104573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200012a9190620005b7565b600860146101000a81548163ffffffff021916908363ffffffff16021790555050620005e6565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316178155600255600180549091169055565b600754604080516001600160a01b03808516825290921660208301527f87539ad41983c0ecff8f321db8edf4dd9e830593562770bdacdda085b83e3bb2910160405180910390a1600780546001600160a01b0319166001600160a01b0392909216919091179055565b600854604080516001600160a01b03808516825290921660208301527f66948d99d8431a8416af2202bc301823b7cdd87beb9bddaa274aedac0611a5fd910160405180910390a1600880546001600160a01b0319166001600160a01b0392909216919091179055565b600454604080516001600160a01b03808516825290921660208301527f5db4a067a1f787c3269642464a2a1560868b50b0873e7dec83939ae2359f6128910160405180910390a1600480546001600160a01b0319166001600160a01b0392909216919091179055565b600554604080516001600160a01b03808516825290921660208301527f649c5e3d0ed183894196148e193af316452b0037e77d2ff0fef23b7dc722bed0910160405180910390a1600580546001600160a01b0319166001600160a01b0392909216919091179055565b600654604080516001600160a01b03808516825290921660208301527f711d2a81db157c0acede64f080708460163dfaddcd4266c2c609efb458d3e4c0910160405180910390a1600680546001600160a01b0319166001600160a01b0392909216919091179055565b6009546040805183815260208101929092527f289d6927dc5ba66abb928c5be9d3aecd2baf7c8e89f1faec6a791b8b21589a5d910160405180910390a1600955565b600b546040805183815260208101929092527f2a1ca87adff1a64c5b6edc218dfd6b80208260b240fbc939ea43e07c2764f5ca910160405180910390a1600b55565b6001600160a01b0381166000908152600d602052604090205460ff16156200048257604051639e9dd41d60e01b815260040160405180910390fd5b6001600160a01b0381166000818152600d6020908152604091829020805460ff1916600117905590519182527f03580ee9f53a62b7cb409a2cb56f9be87747dd15017afc5cef6eef321e4fb2c5910160405180910390a150565b80516001600160a01b0381168114620004f457600080fd5b919050565b600060e082840312156200050c57600080fd5b60405160e081016001600160401b03811182821017156200053d57634e487b7160e01b600052604160045260246000fd5b6040526200054b83620004dc565b81526200055b60208401620004dc565b60208201526200056e60408401620004dc565b60408201526200058160608401620004dc565b60608201526200059460808401620004dc565b608082015260a083015160a082015260c083015160c08201528091505092915050565b600060208284031215620005ca57600080fd5b815163ffffffff81168114620005df57600080fd5b9392505050565b61234b80620005f66000396000f3fe6080604052600436106101fd5760003560e01c80639cadce001161010d578063caabc4c2116100a0578063d9ef0bee1161006f578063d9ef0bee146105eb578063db4045221461060b578063dd39f00d1461062b578063de4b05481461064b578063e79457f11461066b57600080fd5b8063caabc4c214610578578063d1851c9214610598578063d232c220146105b6578063d6412ecb146105d557600080fd5b8063b4cef546116100dc578063b4cef546146104ea578063c2fb26a61461050a578063c415b95c14610543578063c5b350df1461056357600080fd5b80639cadce001461046a5780639f645a031461048a578063a42dce80146104aa578063b1f8100d146104ca57600080fd5b8063634c7bb511610190578063716907a71161015f578063716907a7146103e05780638da5cb5b146103f65780638e02f759146104145780638efed12714610434578063931c0e781461045457600080fd5b8063634c7bb51461035d5780636a42b8f8146103955780636eba787f146103ab578063715018a6146103cb57600080fd5b806351cff8d9116101cc57806351cff8d9146102e757806352910039146103075780635e21966a1461031d57806360f0a5ac1461033d57600080fd5b80632f55b98d146102415780633cf52ffb146102865780634cc18e57146102a55780634d6f2013146102c757600080fd5b3661023c57604080513481524760208201527f063d07ee72a7483b8e07ca09054bb686775c5c030f945dde3823a5257a0a93eb910160405180910390a1005b600080fd5b34801561024d57600080fd5b5061027161025c366004611b49565b600d6020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b34801561029257600080fd5b506002545b60405190815260200161027d565b3480156102b157600080fd5b506102c56102c0366004611b49565b61068b565b005b3480156102d357600080fd5b506102c56102e2366004611b49565b6106eb565b3480156102f357600080fd5b506102c5610302366004611b49565b610747565b34801561031357600080fd5b5061029760095481565b34801561032957600080fd5b506102c5610338366004611b49565b6108e4565b34801561034957600080fd5b506102c5610358366004611b49565b610940565b34801561036957600080fd5b5060065461037d906001600160a01b031681565b6040516001600160a01b03909116815260200161027d565b3480156103a157600080fd5b5062093a80610297565b3480156103b757600080fd5b5060045461037d906001600160a01b031681565b3480156103d757600080fd5b506102c561099c565b3480156103ec57600080fd5b50610297600b5481565b34801561040257600080fd5b506000546001600160a01b031661037d565b34801561042057600080fd5b506102c561042f366004611b6b565b610a50565b34801561044057600080fd5b5061029761044f366004611b97565b610b07565b34801561046057600080fd5b50610297600c5481565b34801561047657600080fd5b5060085461037d906001600160a01b031681565b34801561049657600080fd5b506102c56104a5366004611b49565b610bcd565b3480156104b657600080fd5b506102c56104c5366004611b49565b610c29565b3480156104d657600080fd5b506102c56104e5366004611b49565b610c85565b3480156104f657600080fd5b506102c5610505366004611be1565b610d23565b34801561051657600080fd5b5060085461052e90600160a01b900463ffffffff1681565b60405163ffffffff909116815260200161027d565b34801561054f57600080fd5b5060055461037d906001600160a01b031681565b34801561056f57600080fd5b506102c5610d57565b34801561058457600080fd5b506102c5610593366004611c9d565b610dc7565b3480156105a457600080fd5b506001546001600160a01b031661037d565b3480156105c257600080fd5b506000546001600160a01b031615610271565b3480156105e157600080fd5b50610297600a5481565b3480156105f757600080fd5b506102c5610606366004611cf5565b610ebf565b34801561061757600080fd5b506102c5610626366004611be1565b610fbe565b34801561063757600080fd5b506102c5610646366004611b49565b610ff2565b34801561065757600080fd5b5060075461037d906001600160a01b031681565b34801561067757600080fd5b506102c5610686366004611d55565b61104e565b6000546001600160a01b031633146106b6576040516311a8a1bb60e31b815260040160405180910390fd5b806001600160a01b0381166106de5760405163b04f8dcf60e01b815260040160405180910390fd5b6106e78261110b565b5050565b6000546001600160a01b03163314610716576040516311a8a1bb60e31b815260040160405180910390fd5b806001600160a01b03811661073e5760405163b04f8dcf60e01b815260040160405180910390fd5b6106e782611174565b6000546001600160a01b03163314610772576040516311a8a1bb60e31b815260040160405180910390fd5b61077a6111dd565b60006001600160a01b038216156107f8576040516370a0823160e01b81523060048201526001600160a01b038316906370a0823190602401602060405180830381865afa1580156107cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107f39190611df7565b6107fa565b475b90506001600160a01b03821661081957610814338261123b565b61088c565b60405163a9059cbb60e01b8152336004820152602481018290526001600160a01b0383169063a9059cbb906044016020604051808303816000875af1158015610866573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061088a9190611e1e565b505b604080516001600160a01b0384168152602081018390529081018290527f6e5f7db1c3e1839c6d5eb59148d9042f8cdf3afe518b213142d5a68db640e90c9060600160405180910390a1506108e16001600355565b50565b6000546001600160a01b0316331461090f576040516311a8a1bb60e31b815260040160405180910390fd5b806001600160a01b0381166109375760405163b04f8dcf60e01b815260040160405180910390fd5b6106e782611354565b6000546001600160a01b0316331461096b576040516311a8a1bb60e31b815260040160405180910390fd5b806001600160a01b0381166109935760405163b04f8dcf60e01b815260040160405180910390fd5b6106e7826113bd565b6000546001600160a01b031633146109c7576040516311a8a1bb60e31b815260040160405180910390fd5b62093a80600254426109d99190611e51565b116109f7576040516324e0285f60e21b815260040160405180910390fd5b600254600003610a1a57604051630e4b303f60e21b815260040160405180910390fd5b6001546001600160a01b031615610a44576040516323295ef960e01b815260040160405180910390fd5b610a4e600061144e565b565b600b54600c54610a609190611e64565b421015610a8057604051630c0e333560e11b815260040160405180910390fd5b610a886111dd565b600854604051638e02f75960e01b81526004810185905260248101849052604481018390526001600160a01b0390911690638e02f75990606401600060405180830381600087803b158015610adc57600080fd5b505af1158015610af0573d6000803e3d6000fd5b50505050610afe6001600355565b505042600c5550565b336000908152600d602052604081205460ff16610b3757604051633cb4b93960e01b815260040160405180910390fd5b610b3f6111dd565b6007546040516331f1f3e960e11b81526001600160a01b03909116906363e3e7d290610b6f908690600401611ff2565b6020604051808303816000875af1158015610b8e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bb29190611df7565b9050610bbd826114b3565b610bc76001600355565b92915050565b6000546001600160a01b03163314610bf8576040516311a8a1bb60e31b815260040160405180910390fd5b806001600160a01b038116610c205760405163b04f8dcf60e01b815260040160405180910390fd5b6106e782611536565b6000546001600160a01b03163314610c54576040516311a8a1bb60e31b815260040160405180910390fd5b806001600160a01b038116610c7c5760405163b04f8dcf60e01b815260040160405180910390fd5b6106e78261159f565b6000546001600160a01b03163314610cb0576040516311a8a1bb60e31b815260040160405180910390fd5b6001546001600160a01b038281169116148015610cce575060025415155b15610cec576040516311bc066560e11b815260040160405180910390fd5b6000546001600160a01b03808316911603610d1a57604051634a2fb73f60e11b815260040160405180910390fd5b6108e181611608565b6000546001600160a01b03163314610d4e576040516311a8a1bb60e31b815260040160405180910390fd5b6108e181611656565b6001546001600160a01b03163314610d82576040516311a7f27160e11b815260040160405180910390fd5b62093a8060025442610d949190611e51565b11610db2576040516324e0285f60e21b815260040160405180910390fd5b600154610a4e906001600160a01b031661144e565b336000908152600d602052604090205460ff16610df757604051633cb4b93960e01b815260040160405180910390fd5b600954600a54610e079190611e64565b421015610e275760405163923904d960e01b815260040160405180910390fd5b610e2f6111dd565b610e3d8484600a5485611698565b60085460405163111c183760e01b815260048101869052602481018590526001600160a01b039091169063111c183790604401600060405180830381600087803b158015610e8a57600080fd5b505af1158015610e9e573d6000803e3d6000fd5b50505050610eab816114b3565b610eb56001600355565b505042600a555050565b336000908152600d602052604090205460ff16610eef57604051633cb4b93960e01b815260040160405180910390fd5b610ef76111dd565b600854604051630aec6b9f60e21b81526001600160a01b0390911690632bb1ae7c908490610f299087906004016121e5565b6000604051808303818588803b158015610f4257600080fd5b505af1158015610f56573d6000803e3d6000fd5b505060408051600081526020810187905247918101919091527f6e5f7db1c3e1839c6d5eb59148d9042f8cdf3afe518b213142d5a68db640e90c93506060019150610f9e9050565b60405180910390a1610faf816114b3565b610fb96001600355565b505050565b6000546001600160a01b03163314610fe9576040516311a8a1bb60e31b815260040160405180910390fd5b6108e1816117e6565b6000546001600160a01b0316331461101d576040516311a8a1bb60e31b815260040160405180910390fd5b806001600160a01b0381166110455760405163b04f8dcf60e01b815260040160405180910390fd5b6106e782611828565b336000908152600d602052604090205460ff1661107e57604051633cb4b93960e01b815260040160405180910390fd5b6110866111dd565b60085460405163508a109b60e01b81526001600160a01b039091169063508a109b906110be908990899089908990899060040161223d565b600060405180830381600087803b1580156110d857600080fd5b505af11580156110ec573d6000803e3d6000fd5b505050506110f9816114b3565b6111036001600355565b505050505050565b600654604080516001600160a01b03808516825290921660208301527f711d2a81db157c0acede64f080708460163dfaddcd4266c2c609efb458d3e4c0910160405180910390a1600680546001600160a01b0319166001600160a01b0392909216919091179055565b600754604080516001600160a01b03808516825290921660208301527f87539ad41983c0ecff8f321db8edf4dd9e830593562770bdacdda085b83e3bb2910160405180910390a1600780546001600160a01b0319166001600160a01b0392909216919091179055565b6002600354036112345760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b6002600355565b8047101561128b5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e6365000000604482015260640161122b565b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146112d8576040519150601f19603f3d011682016040523d82523d6000602084013e6112dd565b606091505b5050905080610fb95760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d61792068617665207265766572746564000000000000606482015260840161122b565b600454604080516001600160a01b03808516825290921660208301527f5db4a067a1f787c3269642464a2a1560868b50b0873e7dec83939ae2359f6128910160405180910390a1600480546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0381166000908152600d602052604090205460ff166113f65760405163092a8e7160e41b815260040160405180910390fd5b6001600160a01b0381166000818152600d6020908152604091829020805460ff1916905590519182527f10e1f7ce9fd7d1b90a66d13a2ab3cb8dd7f29f3f8d520b143b063ccfbab6906b91015b60405180910390a150565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316178155600255600180549091169055565b806000036114be5750565b6004546001600160a01b031633036114eb576005546114e6906001600160a01b03168261123b565b6114f5565b6114f5338261123b565b60408051600081526020810183905247918101919091527f6e5f7db1c3e1839c6d5eb59148d9042f8cdf3afe518b213142d5a68db640e90c90606001611443565b600854604080516001600160a01b03808516825290921660208301527f66948d99d8431a8416af2202bc301823b7cdd87beb9bddaa274aedac0611a5fd910160405180910390a1600880546001600160a01b0319166001600160a01b0392909216919091179055565b600554604080516001600160a01b03808516825290921660208301527f649c5e3d0ed183894196148e193af316452b0037e77d2ff0fef23b7dc722bed0910160405180910390a1600580546001600160a01b0319166001600160a01b0392909216919091179055565b42600255600180546001600160a01b0319166001600160a01b0383169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b600b546040805183815260208101929092527f2a1ca87adff1a64c5b6edc218dfd6b80208260b240fbc939ea43e07c2764f5ca910160405180910390a1600b55565b600854604080516020810187905290810185905260608101849052600160a01b90910460e01b6001600160e01b0319166080820152600090608401604051602081830303815290604052805190602001209050600061174e83611748846040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c01604051602081830303815290604052805190602001209050919050565b906118b6565b600854604051632516d8ed60e11b81526001600160a01b038084166004830152929350911690634a2db1da90602401602060405180830381865afa15801561179a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117be9190611e1e565b61110357604051634810638b60e01b81526001600160a01b038216600482015260240161122b565b6009546040805183815260208101929092527f289d6927dc5ba66abb928c5be9d3aecd2baf7c8e89f1faec6a791b8b21589a5d910160405180910390a1600955565b6001600160a01b0381166000908152600d602052604090205460ff161561186257604051639e9dd41d60e01b815260040160405180910390fd5b6001600160a01b0381166000818152600d6020908152604091829020805460ff1916600117905590519182527f03580ee9f53a62b7cb409a2cb56f9be87747dd15017afc5cef6eef321e4fb2c59101611443565b60008060006118c585856118da565b915091506118d28161191f565b509392505050565b60008082516041036119105760208301516040840151606085015160001a61190487828585611a69565b94509450505050611918565b506000905060025b9250929050565b6000816004811115611933576119336122ff565b0361193b5750565b600181600481111561194f5761194f6122ff565b0361199c5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015260640161122b565b60028160048111156119b0576119b06122ff565b036119fd5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015260640161122b565b6003816004811115611a1157611a116122ff565b036108e15760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b606482015260840161122b565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115611aa05750600090506003611b24565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611af4573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116611b1d57600060019250925050611b24565b9150600090505b94509492505050565b80356001600160a01b0381168114611b4457600080fd5b919050565b600060208284031215611b5b57600080fd5b611b6482611b2d565b9392505050565b600080600060608486031215611b8057600080fd5b505081359360208301359350604090920135919050565b60008060408385031215611baa57600080fd5b823567ffffffffffffffff811115611bc157600080fd5b830160a08186031215611bd357600080fd5b946020939093013593505050565b600060208284031215611bf357600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112611c2157600080fd5b813567ffffffffffffffff80821115611c3c57611c3c611bfa565b604051601f8301601f19908116603f01168101908282118183101715611c6457611c64611bfa565b81604052838152866020858801011115611c7d57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060008060808587031215611cb357600080fd5b8435935060208501359250604085013567ffffffffffffffff811115611cd857600080fd5b611ce487828801611c10565b949793965093946060013593505050565b600080600060608486031215611d0a57600080fd5b833567ffffffffffffffff811115611d2157600080fd5b611d2d86828701611c10565b9660208601359650604090950135949350505050565b806104008101831015610bc757600080fd5b6000806000806000806104808789031215611d6f57600080fd5b863567ffffffffffffffff80821115611d8757600080fd5b818901915089601f830112611d9b57600080fd5b813581811115611daa57600080fd5b8a60208260051b8501011115611dbf57600080fd5b602092830198509650508701359350611ddb8860408901611d43565b9250610440870135915061046087013590509295509295509295565b600060208284031215611e0957600080fd5b5051919050565b80151581146108e157600080fd5b600060208284031215611e3057600080fd5b8151611b6481611e10565b634e487b7160e01b600052601160045260246000fd5b81810381811115610bc757610bc7611e3b565b80820180821115610bc757610bc7611e3b565b803563ffffffff81168114611b4457600080fd5b8035611b4481611e10565b6000808335601e19843603018112611ead57600080fd5b830160208101925035905067ffffffffffffffff811115611ecd57600080fd5b80360382131561191857600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6000808335601e19843603018112611f1c57600080fd5b830160208101925035905067ffffffffffffffff811115611f3c57600080fd5b8060051b360382131561191857600080fd5b8183526000602080850194508260005b85811015611f8a576001600160a01b03611f7783611b2d565b1687529582019590820190600101611f5e565b509495945050505050565b81835260006020808501808196508560051b810191508460005b87811015611fe5578284038952611fc68288611e96565b611fd1868284611edc565b9a87019a9550505090840190600101611faf565b5091979650505050505050565b602081526000823561019e1984360301811261200d57600080fd5b60a06020840152830161203060c0840161202683611e77565b63ffffffff169052565b61203c60208201611e77565b63ffffffff1660e084015261205360408201611e77565b6101006120678186018363ffffffff169052565b61207360608401611b2d565b915061012061208c818701846001600160a01b03169052565b61209860808501611b2d565b92506101406120b1818801856001600160a01b03169052565b6120bd60a08601611e8b565b93506101606120cf8189018615159052565b6120dc60c0870187611e96565b95506101a061018081818c01526120f86102608c018985611edc565b975060e0890135828c015261210e878a01611b2d565b6001600160a01b03166101c08c0152948801356101e08b0152505090850135610200880152840135610220870152830135610240860152506121536020860186611f05565b9250601f198086840301604087015261216d838584611f4e565b935061217c6040880188611f05565b9350915080868503016060870152612195848484611f95565b93506121a360608801611b2d565b6001600160a01b038116608088015292506121c16080880188611e96565b93509150808685030160a0870152506121db838383611edc565b9695505050505050565b600060208083528351808285015260005b81811015612212578581018301518582016040015282016121f6565b506000604082860101526040601f19601f8301168501019250505092915050565b6104008183375050565b6104608082528101859052600061048080830190600588901b8401018883805b8a8110156122d35786840361047f190185528235368d900361043e19018112612284578283fd5b8c016104406122938280611e96565b8288526122a38389018284611edc565b9250505060206104008184018289013761042092830135969092019590955294850194929092019160010161225d565b50505080925050508460208301526122ee6040830185612233565b826104408301529695505050505050565b634e487b7160e01b600052602160045260246000fdfea2646970667358221220cca6fd42f5feeda69d431a35d5c6fdf297349e6a9df2c6d352e176b6a3d6a46264736f6c63430008110033";

type RelayerProxyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RelayerProxyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RelayerProxy__factory extends ContractFactory {
  constructor(...args: RelayerProxyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _params: RelayerProxy.ConstructorParamsStruct,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RelayerProxy> {
    return super.deploy(_params, overrides || {}) as Promise<RelayerProxy>;
  }
  override getDeployTransaction(
    _params: RelayerProxy.ConstructorParamsStruct,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_params, overrides || {});
  }
  override attach(address: string): RelayerProxy {
    return super.attach(address) as RelayerProxy;
  }
  override connect(signer: Signer): RelayerProxy__factory {
    return super.connect(signer) as RelayerProxy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RelayerProxyInterface {
    return new utils.Interface(_abi) as RelayerProxyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RelayerProxy {
    return new Contract(address, _abi, signerOrProvider) as RelayerProxy;
  }
}
