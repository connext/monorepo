/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  RootManager,
  RootManagerInterface,
} from "../../../contracts/messaging/RootManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_delayBlocks",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_merkle",
        type: "address",
      },
      {
        internalType: "address",
        name: "_watcherManager",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_minDisputeBlocks",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_disputeBlocks",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__ownershipDelayElapsed_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "RootManager__renounceOwnership_prohibited",
    type: "error",
  },
  {
    inputs: [],
    name: "RootManager_activateOptimisticMode__OptimisticModeOn",
    type: "error",
  },
  {
    inputs: [],
    name: "RootManager_aggregate__OptimisticModeOn",
    type: "error",
  },
  {
    inputs: [],
    name: "RootManager_checkDomains__InvalidDomains",
    type: "error",
  },
  {
    inputs: [],
    name: "RootManager_constructor__DisputeBlocksLowerThanMin",
    type: "error",
  },
  {
    inputs: [],
    name: "RootManager_finalize__InvalidAggregateRoot",
    type: "error",
  },
  {
    inputs: [],
    name: "RootManager_finalize__InvalidInputHash",
    type: "error",
  },
  {
    inputs: [],
    name: "RootManager_finalize__ProposeInProgress",
    type: "error",
  },
  {
    inputs: [],
    name: "RootManager_onlyOptimisticMode__SlowModeOn",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "RootManager_onlyProposer__NotWhitelistedProposer",
    type: "error",
  },
  {
    inputs: [],
    name: "RootManager_propagate__AggregateRootIsZero",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "snapshotId",
        type: "uint256",
      },
    ],
    name: "RootManager_proposeAggregateRoot__InvalidSnapshotId",
    type: "error",
  },
  {
    inputs: [],
    name: "RootManager_proposeAggregateRoot__ProposeInProgress",
    type: "error",
  },
  {
    inputs: [],
    name: "RootManager_sendRootToHub__NoMessageSent",
    type: "error",
  },
  {
    inputs: [],
    name: "RootManager_setDisputeBlocks__DisputeBlocksLowerThanMin",
    type: "error",
  },
  {
    inputs: [],
    name: "RootManager_setDisputeBlocks__SameDisputeBlocksAsBefore",
    type: "error",
  },
  {
    inputs: [],
    name: "RootManager_setHubDomain__InvalidDomain",
    type: "error",
  },
  {
    inputs: [],
    name: "RootManager_setMinDisputeBlocks__SameMinDisputeBlocksAsBefore",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "aggregateRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "domainsHash",
        type: "bytes32",
      },
    ],
    name: "AggregateRootPropagated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "snapshotId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "endOfDispute",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "aggregateRoot",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "baseRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32[]",
        name: "snapshotsRoots",
        type: "bytes32[]",
      },
      {
        indexed: false,
        internalType: "uint32[]",
        name: "domains",
        type: "uint32[]",
      },
    ],
    name: "AggregateRootProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "aggregateRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "rootTimestamp",
        type: "uint256",
      },
    ],
    name: "AggregateRootSavedOptimistic",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "aggregateRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "leafCount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32[]",
        name: "aggregatedRoots",
        type: "bytes32[]",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "rootTimestamp",
        type: "uint256",
      },
    ],
    name: "AggregateRootSavedSlow",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "connector",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32[]",
        name: "domains",
        type: "uint32[]",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "connectors",
        type: "address[]",
      },
    ],
    name: "ConnectorAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "connector",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32[]",
        name: "domains",
        type: "uint32[]",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "connectors",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "ConnectorRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "previous",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "updated",
        type: "uint256",
      },
    ],
    name: "DelayBlocksUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "previous",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "updated",
        type: "uint256",
      },
    ],
    name: "DisputeBlocksUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "connector",
        type: "address",
      },
    ],
    name: "DomainAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
    ],
    name: "DomainRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "HubDomainCleared",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
    ],
    name: "HubDomainSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "previous",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "updated",
        type: "uint256",
      },
    ],
    name: "MinDisputeBlocksUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "OptimisticModeActivated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "connector",
        type: "address",
      },
    ],
    name: "PropagateFailed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposer",
        type: "address",
      },
    ],
    name: "ProposerAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposer",
        type: "address",
      },
    ],
    name: "ProposerRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "fraudulentRoot",
        type: "bytes32",
      },
    ],
    name: "RootDiscarded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "receivedRoot",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "queueIndex",
        type: "uint256",
      },
    ],
    name: "RootReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "watcher",
        type: "address",
      },
    ],
    name: "SlowModeActivated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "watcherManager",
        type: "address",
      },
    ],
    name: "WatcherManagerChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "DEQUEUE_MAX",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "FINALIZED_HASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_DOMAINS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MERKLE",
    outputs: [
      {
        internalType: "contract MerkleTreeManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "activateOptimisticMode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "activateSlowMode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_connector",
        type: "address",
      },
    ],
    name: "addConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_proposer",
        type: "address",
      },
    ],
    name: "addProposer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "bytes32",
        name: "_inbound",
        type: "bytes32",
      },
    ],
    name: "aggregate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowlistedProposers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "clearHubDomain",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "connectors",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "connectorsHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delayBlocks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "dequeue",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
    ],
    name: "discardRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "disputeBlocks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "domains",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "domainsHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_proposedAggregateRoot",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_endOfDispute",
        type: "uint256",
      },
    ],
    name: "finalize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_connectors",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_fees",
        type: "uint256[]",
      },
      {
        internalType: "bytes[]",
        name: "_encodedData",
        type: "bytes[]",
      },
      {
        internalType: "bytes32",
        name: "_proposedAggregateRoot",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_endOfDispute",
        type: "uint256",
      },
    ],
    name: "finalizeAndPropagate",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
    ],
    name: "getConnectorForDomain",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
    ],
    name: "getDomainIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPendingInboundRootsCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSnapshotDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "_snapshotDuration",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "hubDomain",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
    ],
    name: "isDomainSupported",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "lastPropagatedRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastSavedAggregateRootTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minDisputeBlocks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "optimisticMode",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingInboundRoots",
    outputs: [
      {
        internalType: "uint128",
        name: "first",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "last",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_connectors",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_fees",
        type: "uint256[]",
      },
      {
        internalType: "bytes[]",
        name: "_encodedData",
        type: "bytes[]",
      },
    ],
    name: "propagate",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_snapshotId",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_aggregateRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32[]",
        name: "_snapshotsRoots",
        type: "bytes32[]",
      },
      {
        internalType: "uint32[]",
        name: "_domains",
        type: "uint32[]",
      },
    ],
    name: "proposeAggregateRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedAggregateRootHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
    ],
    name: "removeConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_proposer",
        type: "address",
      },
    ],
    name: "removeProposer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "sendRootToHubSpoke",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_delayBlocks",
        type: "uint256",
      },
    ],
    name: "setDelayBlocks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_disputeBlocks",
        type: "uint256",
      },
    ],
    name: "setDisputeBlocks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
    ],
    name: "setHubDomain",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minDisputeBlocks",
        type: "uint256",
      },
    ],
    name: "setMinDisputeBlocks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_watcherManager",
        type: "address",
      },
    ],
    name: "setWatcherManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "validAggregateRoots",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_connectors",
        type: "address[]",
      },
    ],
    name: "validateConnectors",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32[]",
        name: "_domains",
        type: "uint32[]",
      },
      {
        internalType: "address[]",
        name: "_connectors",
        type: "address[]",
      },
    ],
    name: "validateDomains",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "watcherManager",
    outputs: [
      {
        internalType: "contract WatcherManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405260016012553480156200001657600080fd5b5060405162003c7738038062003c77833981016040819052620000399162000196565b600380546001600160a81b0319166101006001600160a01b0386160217905562000063336200010e565b818110156200008557604051637a61d42360e11b815260040160405180910390fd5b6001600160a01b038416620000cf5760405162461bcd60e51b815260206004820152600c60248201526b217a65726f206d65726b6c6560a01b604482015260640160405180910390fd5b6001600160a01b0384166080526009859055600b829055600a81905562000103600e62000173602090811b62001eda17901c565b5050505050620001ea565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316178155600255600180549091169055565b60019055565b80516001600160a01b03811681146200019157600080fd5b919050565b600080600080600060a08688031215620001af57600080fd5b85519450620001c16020870162000179565b9350620001d16040870162000179565b6060870151608090970151959894975095949392505050565b608051613a5c6200021b600039600081816107d001528181610be10152818161151d01526115aa0152613a5c6000f3fe6080604052600436106103815760003560e01c80638456cb59116101d1578063c5b350df11610102578063d2a3cc71116100a0578063e6f1208d1161006f578063e6f1208d14610a21578063e9812d7114610a41578063f4b6e41014610a61578063f715589a14610a7757600080fd5b8063d2a3cc71146109b7578063d3c54fe5146109d7578063d3c805b7146109ec578063db0f016914610a0157600080fd5b8063cbfa2021116100dc578063cbfa20211461094f578063ceb3454e14610964578063d1851c921461097a578063d232c2201461099857600080fd5b8063c5b350df146108f7578063c8ef89de1461090c578063c92930561461092257600080fd5b8063a792c29b1161016f578063ad9c0c2e11610149578063ad9c0c2e14610881578063b03cd41814610897578063b1f8100d146108b7578063b904670f146108d757600080fd5b8063a792c29b1461080f578063a941f3f314610834578063aa0d60a31461085457600080fd5b8063909907cb116101ab578063909907cb1461077f578063957908d114610794578063a01892a5146107be578063a226b2cb146107f257600080fd5b80638456cb591461072c5780638da5cb5b146107415780638e7d93fa1461075f57600080fd5b8063412e12db116102b65780635ffe699d11610254578063715018a611610223578063715018a6146106965780637bc24d99146106ab5780637d434e91146106c15780637d534308146106e157600080fd5b80635ffe699d1461061157806360caf7a01461063157806366cf8fab1461064b5780636a42b8f81461068057600080fd5b8063498c2c2e11610290578063498c2c2e1461059e5780634a2db1da146105b45780635c975abb146105e45780635d308761146105fc57600080fd5b8063412e12db14610563578063460508b414610576578063492a96f41461058b57600080fd5b806324825b0d1161032357806327186c6a116102fd57806327186c6a146104f95780633c4baaf8146105195780633cf52ffb146105395780633f4ba83a1461054e57600080fd5b806324825b0d1461047e57806324ec5d0514610494578063263ef354146104d957600080fd5b806313ede1a11161035f57806313ede1a1146103e857806315fa23bc146104255780631eeaabea1461043a57806320f62eda1461045a57600080fd5b8063089200391461038657806309d632d3146103a85780630f8ef4ee146103c8575b600080fd5b34801561039257600080fd5b506103a66103a1366004612f58565b610aa4565b005b3480156103b457600080fd5b506103a66103c3366004612ff7565b610cad565b3480156103d457600080fd5b506103a66103e3366004613012565b610d21565b3480156103f457600080fd5b50610408610403366004613012565b610d96565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561043157600080fd5b506103a6610dc0565b34801561044657600080fd5b506103a6610455366004613012565b610e4e565b34801561046657600080fd5b50610470600a5481565b60405190815260200161041c565b34801561048a57600080fd5b5061047060155481565b3480156104a057600080fd5b506104c96104af36600461303f565b63ffffffff16600090815260086020526040902054151590565b604051901515815260200161041c565b3480156104e557600080fd5b506103a66104f4366004613012565b610efa565b34801561050557600080fd5b506103a661051436600461305a565b610f88565b34801561052557600080fd5b5061047061053436600461303f565b610ff3565b34801561054557600080fd5b50600254610470565b34801561055a57600080fd5b506103a6611057565b6103a66105713660046131d8565b611094565b34801561058257600080fd5b506103a661118f565b6103a661059936600461326c565b6111f2565b3480156105aa57600080fd5b5061047060075481565b3480156105c057600080fd5b506104c96105cf366004612ff7565b60136020526000908152604090205460ff1681565b3480156105f057600080fd5b5060035460ff166104c9565b34801561060857600080fd5b50610470600181565b34801561061d57600080fd5b506103a661062c36600461303f565b611209565b34801561063d57600080fd5b50600c546104c99060ff1681565b34801561065757600080fd5b5061066b610666366004613012565b6112af565b60405163ffffffff909116815260200161041c565b34801561068c57600080fd5b5062093a80610470565b3480156106a257600080fd5b506103a66112e9565b3480156106b757600080fd5b5061047060055481565b3480156106cd57600080fd5b506104086106dc36600461303f565b61132d565b3480156106ed57600080fd5b50600e5461070c906001600160801b0380821691600160801b90041682565b604080516001600160801b0393841681529290911660208301520161041c565b34801561073857600080fd5b506103a6611365565b34801561074d57600080fd5b506000546001600160a01b0316610408565b34801561076b57600080fd5b506103a661077a366004613313565b611401565b34801561078b57600080fd5b506104706114e0565b3480156107a057600080fd5b506107a96114f1565b6040805192835260208301919091520161041c565b3480156107ca57600080fd5b506104087f000000000000000000000000000000000000000000000000000000000000000081565b3480156107fe57600080fd5b5060165461066b9063ffffffff1681565b34801561081b57600080fd5b506003546104089061010090046001600160a01b031681565b34801561084057600080fd5b506103a661084f366004613012565b611699565b34801561086057600080fd5b50610869606481565b6040516001600160801b03909116815260200161041c565b34801561088d57600080fd5b5061047060095481565b3480156108a357600080fd5b506103a66108b2366004612ff7565b61174a565b3480156108c357600080fd5b506103a66108d2366004612ff7565b6117c1565b3480156108e357600080fd5b506103a66108f236600461333d565b611862565b34801561090357600080fd5b506103a66118da565b34801561091857600080fd5b506104706101f481565b34801561092e57600080fd5b5061047061093d366004613012565b60146020526000908152604090205481565b34801561095b57600080fd5b506103a661194a565b34801561097057600080fd5b5061047060125481565b34801561098657600080fd5b506001546001600160a01b0316610408565b3480156109a457600080fd5b506000546001600160a01b0316156104c9565b3480156109c357600080fd5b506103a66109d2366004612ff7565b611a35565b3480156109e357600080fd5b506103a6611b19565b3480156109f857600080fd5b50610708610470565b348015610a0d57600080fd5b506103a6610a1c366004613370565b611bd8565b348015610a2d57600080fd5b506103a6610a3c36600461303f565b611ceb565b348015610a4d57600080fd5b506103a6610a5c3660046133dc565b611dc4565b348015610a6d57600080fd5b50610470600b5481565b348015610a8357600080fd5b50610470610a9236600461303f565b600d6020526000908152604090205481565b3360009081526013602052604090205460ff16610adb57604051636d5595ef60e11b81523360048201526024015b60405180910390fd5b600c5460ff16610afe576040516383a941c560e01b815260040160405180910390fd5b81816005548282604051602001610b16929190613442565b6040516020818303038152906040528051906020012014610b4a5760405163c38e7eb160e01b815260040160405180910390fd5b610b52611ee0565b61070842048814610b795760405163bac5a76560e01b815260048101899052602401610ad2565b601254600114610b9c57604051631d026cf160e01b815260040160405180910390fd5b6000600a5443610bac919061346c565b60408051602081018b9052908101829052909150606001604051602081830303815290604052805190602001206012819055507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ebf0c7176040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c3d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c61919061347f565b888a7fa3ef5f102c5d4b3958ebddd5fc15de4c4da0bd714d6da2edab94dda2d00e220e848b8b8b8b604051610c9a959493929190613498565b60405180910390a4505050505050505050565b6000546001600160a01b03163314610cd8576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b038116600081815260136020526040808220805460ff19169055517fbab6b194452fd4fa50e0ca09bf0f89976da30a2b92fdf91372ad1a176d81e3289190a250565b6000546001600160a01b03163314610d4c576040516311a8a1bb60e31b815260040160405180910390fd5b610d54611f26565b610d5f600e82611f6f565b6040518181527fd2a17a10ab346c94fae909b2fbfa0fedaf30d08983e74dcc0a92be2c40c437f9906020015b60405180910390a150565b60068181548110610da657600080fd5b6000918252602090912001546001600160a01b0316905081565b610dc8611ee0565b601554600090815260146020526040902054601654610dec9063ffffffff1661132d565b6001600160a01b03166397b45353826040518263ffffffff1660e01b8152600401610e1991815260200190565b600060405180830381600087803b158015610e3357600080fd5b505af1158015610e47573d6000803e3d6000fd5b5050505050565b6000546001600160a01b03163314610e79576040516311a8a1bb60e31b815260040160405180910390fd5b6009548103610eb95760405162461bcd60e51b815260206004820152600c60248201526b2164656c6179426c6f636b7360a01b6044820152606401610ad2565b60095460408051918252602082018390527fef322fd61cb3d8514326f0b28140a92a29cd10996ad80d0671e43d2483464c1d910160405180910390a1600955565b6000546001600160a01b03163314610f25576040516311a8a1bb60e31b815260040160405180910390fd5b600b548103610f4757604051632d1150e160e11b815260040160405180910390fd5b600b5460408051918252602082018390527fdfad87ee418f8b636836b030634c8040055c9a5f641899df5a5d1d3c554fee47910160405180910390a1600b55565b6007548282604051602001610f9e9291906134f2565b6040516020818303038152906040528051906020012014610fef5760405162461bcd60e51b815260206004820152600b60248201526a21636f6e6e6563746f727360a81b6044820152606401610ad2565b5050565b63ffffffff81166000908152600860205260408120548082036110455760405162461bcd60e51b815260206004820152600a602482015269085cdd5c1c1bdc9d195960b21b6044820152606401610ad2565b61105060018261353e565b9392505050565b6000546001600160a01b03163314611082576040516311a8a1bb60e31b815260040160405180910390fd5b61108a611f26565b611092611fe0565b565b61109c611ee0565b6110a68585610f88565b8382811480156110b65750808251145b6110f45760405162461bcd60e51b815260206004820152600f60248201526e696e76616c6964206c656e6774687360881b6044820152606401610ad2565b600c5460ff16611109576111066114f1565b50505b6015546000908152601460205260408120549081900361113c5760405163e89b6b9f60e01b815260040160405180910390fd5b807f1a0dbd47cf73d4c161d809dd2b7955e46b3be4df5d0810afc2fbeeca1125e3e660055460405161117091815260200190565b60405180910390a2611186818888888888612032565b50505050505050565b6000546001600160a01b031633146111ba576040516311a8a1bb60e31b815260040160405180910390fd5b6016805463ffffffff191690556040517fba00effa0806904d44bcf9124dab4b3bb88a16e065682cb0621dc0924aaaef9d90600090a1565b6111fc8282611dc4565b6111868787878787611094565b6000546001600160a01b03163314611234576040516311a8a1bb60e31b815260040160405180910390fd5b63ffffffff811660009081526008602052604090205461126757604051636bc2867760e01b815260040160405180910390fd5b6016805463ffffffff191663ffffffff83169081179091556040519081527f741fa366ad8a97c31e0c702cff3583c3e7f5e9d09a1f295f786fa0762e1d0c8690602001610d8b565b600481815481106112bf57600080fd5b9060005260206000209060089182820401919006600402915054906101000a900463ffffffff1681565b6000546001600160a01b03163314611314576040516311a8a1bb60e31b815260040160405180910390fd5b6040516383c7055f60e01b815260040160405180910390fd5b6000600661133a83610ff3565b8154811061134a5761134a613551565b6000918252602090912001546001600160a01b031692915050565b6003546040516384785ecd60e01b81523360048201526101009091046001600160a01b0316906384785ecd90602401602060405180830381865afa1580156113b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113d59190613567565b6113f15760405162461bcd60e51b8152600401610ad290613589565b6113f9611ee0565b61109261231c565b611409611ee0565b81336114148261132d565b6001600160a01b0316146114575760405162461bcd60e51b815260206004820152600a60248201526910b1b7b73732b1ba37b960b11b6044820152606401610ad2565b600c5460ff161561147b5760405163515f45f160e11b815260040160405180910390fd5b6000611488600e84612359565b6040805163ffffffff87168152602081018690526001600160801b0383168183015290519192507f1daad24ee1bf0bcc72ab681d29df86ec2794361b223da31f148b9f826cd135a8919081900360600190a150505050565b60006114ec600e6123cb565b905090565b6000806114fc611ee0565b60095460009061151090600e9060646123f5565b905080516000036115a5577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663c9b0a6de6040518163ffffffff1660e01b81526004016040805180830381865afa158015611578573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061159c91906135ab565b92509250509091565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166334a55ee6846040518263ffffffff1660e01b81526004016115f491906135ff565b60408051808303816000875af1158015611612573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061163691906135ab565b426000818152601460205260409081902084905560158290555192945090925083917f541aefdf3f12e63098ec1c2d20f1417537e559cfc90a3c53960fe09cd475515b916116879185918891613612565b60405180910390a29093509150509091565b6000546001600160a01b031633146116c4576040516311a8a1bb60e31b815260040160405180910390fd5b600b548110156116e75760405163e28adcd160e01b815260040160405180910390fd5b600a548103611709576040516346fee83f60e11b815260040160405180910390fd5b600a5460408051918252602082018390527fff74184d965d306545ebeb3283c4d7a39f453a9c0ea539db6437b33ceb9c5125910160405180910390a1600a55565b6000546001600160a01b03163314611775576040516311a8a1bb60e31b815260040160405180910390fd5b6001600160a01b038116600081815260136020526040808220805460ff19166001179055517f2bf05609716bc4b090ad0e99b47b91881c7517771259c625df05db7e9d8c81819190a250565b6000546001600160a01b031633146117ec576040516311a8a1bb60e31b815260040160405180910390fd5b6001546001600160a01b03828116911614801561180a575060025415155b15611828576040516311bc066560e11b815260040160405180910390fd5b6000546001600160a01b0380831691160361185657604051634a2fb73f60e11b815260040160405180910390fd5b61185f81612776565b50565b6000546001600160a01b0316331461188d576040516311a8a1bb60e31b815260040160405180910390fd5b61189782826127c4565b7f95ef69787290b89c35a092c89db1b283b43724d01263e683cfb560c758cdbe708282600460066040516118ce9493929190613801565b60405180910390a15050565b6001546001600160a01b03163314611905576040516311a7f27160e11b815260040160405180910390fd5b62093a8060025442611917919061353e565b11611935576040516324e0285f60e21b815260040160405180910390fd5b600154611092906001600160a01b03166129b0565b6003546040516384785ecd60e01b81523360048201526101009091046001600160a01b0316906384785ecd90602401602060405180830381865afa158015611996573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119ba9190613567565b6119d65760405162461bcd60e51b8152600401610ad290613589565b600c5460ff166119f9576040516383a941c560e01b815260040160405180910390fd5b600c805460ff19169055600160125560405133907f714b2723706f07835c1a61e679dc639438acf1e1d0bbae60d17e5a246a754d6e90600090a2565b6000546001600160a01b03163314611a60576040516311a8a1bb60e31b815260040160405180910390fd5b6003546001600160a01b03610100909104811690821603611ac35760405162461bcd60e51b815260206004820152601760248201527f616c72656164792077617463686572206d616e616765720000000000000000006044820152606401610ad2565b60038054610100600160a81b0319166101006001600160a01b038416908102919091179091556040519081527fc16d059e43d7f8e29ccb4e001a2f249d3c59e274925d6a6bc3912943441d9f6c90602001610d8b565b6000546001600160a01b03163314611b44576040516311a8a1bb60e31b815260040160405180910390fd5b600c5460ff1615611b6b5760405160016238010d60e21b0319815260040160405180910390fd5b600e54611b83906001906001600160801b031661384e565b600e80546001600160801b03928316600160801b029216919091179055600c805460ff191660011790556040517f46b91c03184b9c3d3422333019c7e56a3e8940f285463e754a526110287bd52190600090a1565b828114611c1a5760405162461bcd60e51b815260206004820152601060248201526f042dac2e8c6d0d2dcce40d8cadccee8d60831b6044820152606401610ad2565b6005548484604051602001611c30929190613442565b6040516020818303038152906040528051906020012014611c7e5760405162461bcd60e51b815260206004820152600860248201526721646f6d61696e7360c01b6044820152606401610ad2565b6007548282604051602001611c949291906134f2565b6040516020818303038152906040528051906020012014611ce55760405162461bcd60e51b815260206004820152600b60248201526a21636f6e6e6563746f727360a81b6044820152606401610ad2565b50505050565b6003546040516384785ecd60e01b81523360048201526101009091046001600160a01b0316906384785ecd90602401602060405180830381865afa158015611d37573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d5b9190613567565b611d775760405162461bcd60e51b8152600401610ad290613589565b6000611d8282612a15565b60016012556040519091507f6a1097f391a37dc63e0860e64ec34442971eeed2fda4d1a90141fa9ce25eb7eb906118ce90849084906004906006903390613875565b600c5460ff16611de7576040516383a941c560e01b815260040160405180910390fd5b611def611ee0565b6012546000198101611e1457604051636fcbb76f60e11b815260040160405180910390fd5b60408051602080820186905281830185905282518083038401815260609092019092528051910120818114611e5c5760405163ae4fc77d60e01b815260040160405180910390fd5b43831115611e7d5760405163bd24f2dd60e01b815260040160405180910390fd5b4260008181526014602052604090819020869055601582905560016012555185917f10979f09c442b2dfe17197e10366eb89a0dde719c4a0c0529b87e086ab3078c391611ecc91815260200190565b60405180910390a250505050565b60019055565b60035460ff16156110925760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610ad2565b60035460ff166110925760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610ad2565b600081815260038301602052604090205460ff1615611fc25760405162461bcd60e51b815260206004820152600f60248201526e185b1c9958591e481c995b5bdd9959608a1b6044820152606401610ad2565b6000908152600390910160205260409020805460ff19166001179055565b611fe8611f26565b6003805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b346000805b63ffffffff81168711156122e3576000600d600060048463ffffffff168154811061206457612064613551565b90600052602060002090600891828204019190066004029054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020019081526020016000205490508981036120b75750600101612037565b88888363ffffffff168181106120cf576120cf613551565b90506020020160208101906120e49190612ff7565b6001600160a01b03166348e6fa2388888563ffffffff1681811061210a5761210a613551565b905060200201358c60405160200161212491815260200190565b604051602081830303815290604052888663ffffffff168151811061214b5761214b613551565b60200260200101516040518463ffffffff1660e01b8152600401612170929190613911565b6000604051808303818588803b15801561218957600080fd5b505af19350505050801561219b575060015b612258577f51f2ef0ced5ef0ec14268d79d48589f9ccff35b2b0baf5059a90166caffea7a760048363ffffffff16815481106121d9576121d9613551565b90600052602060002090600891828204019190066004029054906101000a900463ffffffff168a8a8563ffffffff1681811061221757612217613551565b905060200201602081019061222c9190612ff7565b6040805163ffffffff90931683526001600160a01b0390911660208301520160405180910390a16122da565b86868363ffffffff1681811061227057612270613551565b9050602002013584612282919061353e565b93506001925089600d600060048563ffffffff16815481106122a6576122a6613551565b6000918252602080832060088304015460079092166004026101000a90910463ffffffff1683528201929092526040019020555b50600101612037565b508061230257604051634f05605360e11b815260040160405180910390fd5b8115612312576123123383612c8c565b5050505050505050565b612324611ee0565b6003805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586120153390565b81546000904390849060109061237e90600160801b90046001600160801b031661393f565b82546001600160801b038083166101009490940a84810291021990911617909255600090815260018601602090815260408083209690965560029096019095529290932092909255919050565b80546000906001600160801b03600160801b8204811691166123ed8282612daa565b949350505050565b82546060906001600160801b0380821691600160801b9004168181101561242e5750506040805160008152602081019091529050611050565b816001600160801b03166000036124775760405162461bcd60e51b815260206004820152600d60248201526c1c5d595d5948085a5b9a5d09d9609a1b6044820152606401610ad2565b6000846001600160801b0316116124c25760405162461bcd60e51b815260206004820152600f60248201526e042c2c6c6cae0e8c2c4d8ca40dac2f608b1b6044820152606401610ad2565b600060016124d08685613965565b6124da919061384e565b9050806001600160801b0316826001600160801b031611156124fa578091505b506000612507864361353e565b905060005b826001600160801b0316846001600160801b03161161255e576001600160801b038316600090815260028901602052604090205482811161255157600191505061255e565b506000199092019161250c565b8061257e5750506040805160008152602081019091529250611050915050565b60008461258c856001613965565b612596919061384e565b6001600160801b031667ffffffffffffffff8111156125b7576125b761309c565b6040519080825280602002602001820160405280156125e0578160200160208202803683370190505b5090506000805b856001600160801b0316876001600160801b03161161269f576001600160801b038716600090815260018c01602090815260408083205480845260038f019092529091205460ff1661265d578084848151811061264657612646613551565b602002602001018181525050826001019250612667565b8161266757600191505b506001600160801b038716600090815260018c81016020908152604080842084905560028f01909152822091909155909601956125e7565b8a546fffffffffffffffffffffffffffffffff19166001600160801b038816178b55806126d55782975050505050505050611050565b60008267ffffffffffffffff8111156126f0576126f061309c565b604051908082528060200260200182016040528015612719578160200160208202803683370190505b50905060005b838110156127665784818151811061273957612739613551565b602002602001015182828151811061275357612753613551565b602090810291909101015260010161271f565b5097506110509650505050505050565b42600255600180546001600160a01b0319166001600160a01b0383169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b63ffffffff8216600090815260086020526040902054156128175760405162461bcd60e51b815260206004820152600d60248201526c646f6d61696e2065786973747360981b6044820152606401610ad2565b6001600160a01b03811661285a5760405162461bcd60e51b815260206004820152600a60248201526910b1b7b73732b1ba37b960b11b6044820152606401610ad2565b6004546101f4116128ad5760405162461bcd60e51b815260206004820152601960248201527f446f6d61696e496e6465786572206174206361706163697479000000000000006044820152606401610ad2565b600480546001818101835560088083047f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b01805463ffffffff808916600790961687026101000a8681029102199091161790556006805492830190557ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f90910180546001600160a01b0386166001600160a01b03199091161790559154600091825260209290925260409020819055612964612dd4565b6040805163ffffffff851681526001600160a01b03841660208201527f4fc27362d8ab3086efd93b7880e99ac02e906d0ba9b71ca90239ade53090f703910160405180910390a1505050565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316178155600255600180549091169055565b600080612a2183610ff3565b9050600060068281548110612a3857612a38613551565b6000918252602090912001546001600160a01b0316905080612a905760405162461bcd60e51b8152602060048201526011602482015270636f6e6e6563746f72202165786973747360781b6044820152606401610ad2565b600454600090612aa29060019061353e565b905080831015612bbb57600060048281548110612ac157612ac1613551565b90600052602060002090600891828204019190066004029054906101000a900463ffffffff1690508060048581548110612afd57612afd613551565b90600052602060002090600891828204019190066004026101000a81548163ffffffff021916908363ffffffff16021790555060068281548110612b4357612b43613551565b600091825260209091200154600680546001600160a01b039092169186908110612b6f57612b6f613551565b600091825260209091200180546001600160a01b0319166001600160a01b0392909216919091179055612ba384600161346c565b63ffffffff9091166000908152600860205260409020555b6004805480612bcc57612bcc613985565b600082815260209020600860001990920191820401805463ffffffff600460078516026101000a021916905590556006805480612c0b57612c0b613985565b60008281526020808220830160001990810180546001600160a01b031916905590920190925563ffffffff87168252600890526040812055612c4b612dd4565b60405163ffffffff861681527f7e560b48a4bba1688eb45afd6712a11fa42b9abbb48a8e14e2f15e467ab420e49060200160405180910390a1509392505050565b80471015612cdc5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e63650000006044820152606401610ad2565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114612d29576040519150601f19603f3d011682016040523d82523d6000602084013e612d2e565b606091505b5050905080612da55760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d617920686176652072657665727465640000000000006064820152608401610ad2565b505050565b600081612db8846001613965565b612dc2919061384e565b6001600160801b031690505b92915050565b60006004805480602002602001604051908101604052809291908181526020018280548015612e4e57602002820191906000526020600020906000905b82829054906101000a900463ffffffff1663ffffffff1681526020019060040190602082600301049283019260010382029150808411612e115790505b5050505050905060006006805480602002602001604051908101604052809291908181526020018280548015612ead57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311612e8f575b5050505050905081604051602001612ec5919061399b565b60408051601f19818403018152908290528051602091820120600555612eed918391016139e5565b60408051601f1981840301815291905280516020909101206007555050565b60008083601f840112612f1e57600080fd5b50813567ffffffffffffffff811115612f3657600080fd5b6020830191508360208260051b8501011115612f5157600080fd5b9250929050565b60008060008060008060808789031215612f7157600080fd5b8635955060208701359450604087013567ffffffffffffffff80821115612f9757600080fd5b612fa38a838b01612f0c565b90965094506060890135915080821115612fbc57600080fd5b50612fc989828a01612f0c565b979a9699509497509295939492505050565b80356001600160a01b0381168114612ff257600080fd5b919050565b60006020828403121561300957600080fd5b61105082612fdb565b60006020828403121561302457600080fd5b5035919050565b803563ffffffff81168114612ff257600080fd5b60006020828403121561305157600080fd5b6110508261302b565b6000806020838503121561306d57600080fd5b823567ffffffffffffffff81111561308457600080fd5b61309085828601612f0c565b90969095509350505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156130db576130db61309c565b604052919050565b6000601f83818401126130f557600080fd5b8235602067ffffffffffffffff808311156131125761311261309c565b8260051b6131218382016130b2565b938452868101830193838101908986111561313b57600080fd5b84890192505b858310156131cb578235848111156131595760008081fd5b8901603f81018b1361316b5760008081fd5b858101356040868211156131815761318161309c565b613192828b01601f191689016130b2565b8281528d828486010111156131a75760008081fd5b828285018a8301376000928101890192909252508352509184019190840190613141565b9998505050505050505050565b6000806000806000606086880312156131f057600080fd5b853567ffffffffffffffff8082111561320857600080fd5b61321489838a01612f0c565b9097509550602088013591508082111561322d57600080fd5b61323989838a01612f0c565b9095509350604088013591508082111561325257600080fd5b5061325f888289016130e3565b9150509295509295909350565b600080600080600080600060a0888a03121561328757600080fd5b873567ffffffffffffffff8082111561329f57600080fd5b6132ab8b838c01612f0c565b909950975060208a01359150808211156132c457600080fd5b6132d08b838c01612f0c565b909750955060408a01359150808211156132e957600080fd5b506132f68a828b016130e3565b935050606088013591506080880135905092959891949750929550565b6000806040838503121561332657600080fd5b61332f8361302b565b946020939093013593505050565b6000806040838503121561335057600080fd5b6133598361302b565b915061336760208401612fdb565b90509250929050565b6000806000806040858703121561338657600080fd5b843567ffffffffffffffff8082111561339e57600080fd5b6133aa88838901612f0c565b909650945060208701359150808211156133c357600080fd5b506133d087828801612f0c565b95989497509550505050565b600080604083850312156133ef57600080fd5b50508035926020909101359150565b8183526000602080850194508260005b858110156134375763ffffffff6134248361302b565b168752958201959082019060010161340e565b509495945050505050565b6020815260006123ed6020830184866133fe565b634e487b7160e01b600052601160045260246000fd5b80820180821115612dce57612dce613456565b60006020828403121561349157600080fd5b5051919050565b858152606060208201819052810184905260006001600160fb1b038511156134bf57600080fd5b8460051b808760808501378201828103608090810160408501526134e690820185876133fe565b98975050505050505050565b60208082528181018390526000908460408401835b86811015613533576001600160a01b0361352084612fdb565b1682529183019190830190600101613507565b509695505050505050565b81810381811115612dce57612dce613456565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561357957600080fd5b8151801515811461105057600080fd5b60208082526008908201526710bbb0ba31b432b960c11b604082015260600190565b600080604083850312156135be57600080fd5b505080516020909101519092909150565b600081518084526020808501945080840160005b83811015613437578151875295820195908201906001016135e3565b60208152600061105060208301846135cf565b83815260606020820152600061362b60608301856135cf565b9050826040830152949350505050565b805480835260008281526020808220940193909190825b826007820110156136ca57815463ffffffff8082168852602082811c821690890152604082811c821690890152606082811c821690890152608082811c82169089015260a082811c82169089015260c082811c9091169088015260e090811c9087015261010090950194600190910190600801613652565b905490828110156136e85763ffffffff821686526020909501946001015b8281101561370857602082901c63ffffffff168652602095909501946001015b828110156137275763ffffffff604083901c1686526020909501946001015b828110156137465763ffffffff606083901c1686526020909501946001015b828110156137655763ffffffff608083901c1686526020909501946001015b828110156137845763ffffffff60a083901c1686526020909501946001015b828110156137a35763ffffffff60c083901c1686526020909501946001015b828110156137b95760e082901c86526020860195505b5093949350505050565b6000815480845260208085019450836000528060002060005b838110156134375781546001600160a01b0316875295820195600191820191016137dc565b63ffffffff851681526001600160a01b03841660208201526080604082018190526000906138319083018561363b565b828103606084015261384381856137c3565b979650505050505050565b6001600160801b0382811682821603908082111561386e5761386e613456565b5092915050565b63ffffffff86168152600060018060a01b03808716602084015260a060408401526138a360a084018761363b565b83810360608501526138b581876137c3565b9250508084166080840152509695505050505050565b6000815180845260005b818110156138f1576020818501810151868301820152016138d5565b506000602082860101526020601f19601f83011685010191505092915050565b60408152600061392460408301856138cb565b828103602084015261393681856138cb565b95945050505050565b60006001600160801b0380831681810361395b5761395b613456565b6001019392505050565b6001600160801b0381811683821601908082111561386e5761386e613456565b634e487b7160e01b600052603160045260246000fd5b6020808252825182820181905260009190848201906040850190845b818110156139d957835163ffffffff16835292840192918401916001016139b7565b50909695505050505050565b6020808252825182820181905260009190848201906040850190845b818110156139d95783516001600160a01b031683529284019291840191600101613a0156fea26469706673582212200d5e9c96bcafc43636f113e0b7dcfb7f97a9c11ec78cb79bb5805797364caed964736f6c63430008110033";

type RootManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RootManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RootManager__factory extends ContractFactory {
  constructor(...args: RootManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _delayBlocks: PromiseOrValue<BigNumberish>,
    _merkle: PromiseOrValue<string>,
    _watcherManager: PromiseOrValue<string>,
    _minDisputeBlocks: PromiseOrValue<BigNumberish>,
    _disputeBlocks: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RootManager> {
    return super.deploy(
      _delayBlocks,
      _merkle,
      _watcherManager,
      _minDisputeBlocks,
      _disputeBlocks,
      overrides || {}
    ) as Promise<RootManager>;
  }
  override getDeployTransaction(
    _delayBlocks: PromiseOrValue<BigNumberish>,
    _merkle: PromiseOrValue<string>,
    _watcherManager: PromiseOrValue<string>,
    _minDisputeBlocks: PromiseOrValue<BigNumberish>,
    _disputeBlocks: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _delayBlocks,
      _merkle,
      _watcherManager,
      _minDisputeBlocks,
      _disputeBlocks,
      overrides || {}
    );
  }
  override attach(address: string): RootManager {
    return super.attach(address) as RootManager;
  }
  override connect(signer: Signer): RootManager__factory {
    return super.connect(signer) as RootManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RootManagerInterface {
    return new utils.Interface(_abi) as RootManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RootManager {
    return new Contract(address, _abi, signerOrProvider) as RootManager;
  }
}
