/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  ArbitrumHubConnector,
  ArbitrumHubConnectorInterface,
} from "../../../../../contracts/messaging/connectors/arbitrum/ArbitrumHubConnector";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_mirrorDomain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_amb",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rootManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
      {
        internalType: "address",
        name: "_outbox",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_maxSubmissionCostCap",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxGasCap",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_gasPriceCap",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Connector__processMessage_notUsed",
    type: "error",
  },
  {
    inputs: [],
    name: "NotCrossChainCall",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__ownershipDelayElapsed_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "TypedMemView__index_indexMoreThan32Bytes",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "loc",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "len",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "slice",
        type: "uint256",
      },
    ],
    name: "TypedMemView__index_overrun",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FundsWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_previous",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_updated",
        type: "uint256",
      },
    ],
    name: "GasPriceCapUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_previous",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_updated",
        type: "uint256",
      },
    ],
    name: "MaxGasCapUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_previous",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_updated",
        type: "uint256",
      },
    ],
    name: "MaxSubmissionCapUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageProcessed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "encodedData",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "current",
        type: "address",
      },
    ],
    name: "MirrorConnectorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "mirrorDomain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "amb",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "rootManager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "mirrorConnector",
        type: "address",
      },
    ],
    name: "NewConnector",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "ticketId",
        type: "uint256",
      },
    ],
    name: "RetryableTicketCreated",
    type: "event",
  },
  {
    inputs: [],
    name: "AMB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIRROR_DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_MANAGER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gasPriceCap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxGasCap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSubmissionCostCap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorConnector",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "outbox",
    outputs: [
      {
        internalType: "contract IArbitrumOutbox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "processMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "_nodeNum",
        type: "uint64",
      },
      {
        internalType: "bytes32",
        name: "_sendRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_blockHash",
        type: "bytes32",
      },
      {
        internalType: "bytes32[]",
        name: "_proof",
        type: "bytes32[]",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "l2Sender",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "l2Block",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "l1Block",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "l2Timestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
        ],
        internalType: "struct L2Message",
        name: "_message",
        type: "tuple",
      },
    ],
    name: "processMessageFromRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "processed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rollup",
    outputs: [
      {
        internalType: "contract IArbitrumRollup",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "_encodedData",
        type: "bytes",
      },
    ],
    name: "sendMessage",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_updated",
        type: "uint256",
      },
    ],
    name: "setGasPriceCap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_updated",
        type: "uint256",
      },
    ],
    name: "setMaxGasCap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_updated",
        type: "uint256",
      },
    ],
    name: "setMaxSubmissionCostCap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
    ],
    name: "setMirrorConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_expected",
        type: "address",
      },
    ],
    name: "verifySender",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
    ],
    name: "withdrawFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6101006040523480156200001257600080fd5b50604051620023c7380380620023c7833981016040819052620000359162000335565b888888888884848484846200004a3362000235565b8463ffffffff16600003620000955760405162461bcd60e51b815260206004820152600c60248201526b32b6b83a3c903237b6b0b4b760a11b60448201526064015b60405180910390fd5b6001600160a01b038216620000e15760405162461bcd60e51b815260206004820152601160248201527032b6b83a3c903937b7ba26b0b730b3b2b960791b60448201526064016200008c565b63ffffffff8086166080526001600160a01b0380851660a05283811660c05290851660e052811615620001195762000119816200029a565b604080516001600160a01b0385811682528481166020830152831681830152905163ffffffff86811692908816917f4f9c27c2fe3f84576ea469d367d044da53c45e951617e8389f2b5ed8db9d25f09181900360600190a35050600480546001600160a01b0319166001600160a01b038e1690811782556040805163cb23bcb560e01b81529051919a5063cb23bcb599508083019850602097509095508590030192508391508790505afa158015620001d6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001fc9190620003d5565b600580546001600160a01b0319166001600160a01b039290921691909117905560069290925560075560085550620003fa945050505050565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316178155600255600180549091169055565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b805163ffffffff811681146200031857600080fd5b919050565b80516001600160a01b03811681146200031857600080fd5b60008060008060008060008060006101208a8c0312156200035557600080fd5b620003608a62000303565b98506200037060208b0162000303565b97506200038060408b016200031d565b96506200039060608b016200031d565b9550620003a060808b016200031d565b9450620003b060a08b016200031d565b935060c08a0151925060e08a015191506101008a015190509295985092959850929598565b600060208284031215620003e857600080fd5b620003f3826200031d565b9392505050565b60805160a05160c05160e051611f696200045e600039600081816102420152610a11015260008181610349015281816106150152610a42015260008181610526015281816106ca01528181610d8101526114e1015260006102f50152611f696000f3fe6080604052600436106101bb5760003560e01c80639ab0563b116100ec578063ce11e6ab1161008a578063d69f9d6111610064578063d69f9d6114610514578063db1b765914610548578063e2ce3c6414610568578063fbd4006b1461057e57600080fd5b8063ce11e6ab146104b7578063d1851c92146104d7578063d232c220146104f557600080fd5b8063b64d327e116100c6578063b64d327e1461044c578063c5b350df14610462578063cb23bcb514610477578063cc3942831461049757600080fd5b80639ab0563b146103ec5780639d4373a41461040c578063b1f8100d1461042c57600080fd5b806352a9674b1161015957806368742da61161013357806368742da6146103835780636a42b8f8146103a3578063715018a6146103b95780638da5cb5b146103ce57600080fd5b806352a9674b146102e35780635bd11efc146103175780635f61e3ec1461033757600080fd5b80633327998d116101955780633327998d146102795780633cf52ffb1461029b57806348e6fa23146102b05780634ff746f6146102c357600080fd5b806305a79e06146101c75780630fca49cd1461020c578063141684161461023057600080fd5b366101c257005b600080fd5b3480156101d357600080fd5b506101f76101e23660046118e1565b60096020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b34801561021857600080fd5b5061022260065481565b604051908152602001610203565b34801561023c57600080fd5b506102647f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff9091168152602001610203565b34801561028557600080fd5b506102996102943660046118e1565b61059e565b005b3480156102a757600080fd5b50600254610222565b6102996102be3660046119c7565b61060a565b3480156102cf57600080fd5b506102996102de366004611a2b565b6106bf565b3480156102ef57600080fd5b506102647f000000000000000000000000000000000000000000000000000000000000000081565b34801561032357600080fd5b50610299610332366004611a7d565b610765565b34801561034357600080fd5b5061036b7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610203565b34801561038f57600080fd5b5061029961039e366004611a7d565b61079c565b3480156103af57600080fd5b5062093a80610222565b3480156103c557600080fd5b50610299610819565b3480156103da57600080fd5b506000546001600160a01b031661036b565b3480156103f857600080fd5b506102996104073660046118e1565b6108cd565b34801561041857600080fd5b50610299610427366004611ac8565b610939565b34801561043857600080fd5b50610299610447366004611a7d565b610b08565b34801561045857600080fd5b5061022260075481565b34801561046e57600080fd5b50610299610ba6565b34801561048357600080fd5b5060055461036b906001600160a01b031681565b3480156104a357600080fd5b5060035461036b906001600160a01b031681565b3480156104c357600080fd5b5060045461036b906001600160a01b031681565b3480156104e357600080fd5b506001546001600160a01b031661036b565b34801561050157600080fd5b506000546001600160a01b0316156101f7565b34801561052057600080fd5b5061036b7f000000000000000000000000000000000000000000000000000000000000000081565b34801561055457600080fd5b506101f7610563366004611a7d565b610c16565b34801561057457600080fd5b5061022260085481565b34801561058a57600080fd5b506102996105993660046118e1565b610c27565b6000546001600160a01b031633146105c9576040516311a8a1bb60e31b815260040160405180910390fd5b60065460408051918252602082018390527f8826388bbfa56ae5df40ee5607d9d354fa66549d854624242c77b5af2a5e4c3b910160405180910390a1600655565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146106765760405162461bcd60e51b815260206004820152600c60248201526b10b937b7ba26b0b730b3b2b960a11b60448201526064015b60405180910390fd5b6106808282610c93565b7fdcaa37a042a0087de79018c629bbd29cee82ca80bd9be394e1696bf9e93550778282336040516106b393929190611bd8565b60405180910390a15050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146107205760405162461bcd60e51b815260040161066d9060208082526004908201526310a0a6a160e11b604082015260600190565b61072981610e9c565b7fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced813360405161075a929190611c16565b60405180910390a150565b6000546001600160a01b03163314610790576040516311a8a1bb60e31b815260040160405180910390fd5b61079981610eb5565b50565b6000546001600160a01b031633146107c7576040516311a8a1bb60e31b815260040160405180910390fd5b476107d28282610f1e565b816001600160a01b03167feaff4b37086828766ad3268786972c0cd24259d4c87a80f9d3963a3c3d999b0d8260405161080d91815260200190565b60405180910390a25050565b6000546001600160a01b03163314610844576040516311a8a1bb60e31b815260040160405180910390fd5b62093a80600254426108569190611c56565b11610874576040516324e0285f60e21b815260040160405180910390fd5b60025460000361089757604051630e4b303f60e21b815260040160405180910390fd5b6001546001600160a01b0316156108c1576040516323295ef960e01b815260040160405180910390fd5b6108cb600061103c565b565b6000546001600160a01b031633146108f8576040516311a8a1bb60e31b815260040160405180910390fd5b60075460408051918252602082018390527f57bffb29c4c6b672a2e334fa00ea826dba286d6cb34d61bebc6c667abb579c62910160405180910390a1600755565b6109448787876110a1565b61095186858585856111f6565b61095e60c0820182611c69565b90506064146109995760405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b604482015260640161066d565b60006109fd604460206109f0846109b360c0880188611c69565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092939250506113599050565b62ffffff1916919061137d565b60405163473ec9fd60e11b815263ffffffff7f0000000000000000000000000000000000000000000000000000000000000000166004820152602481018290529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690638e7d93fa90604401600060405180830381600087803b158015610a8e57600080fd5b505af1158015610aa2573d6000803e3d6000fd5b505050507fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced81604051602001610ada91815260200190565b60408051601f1981840301815290829052610af6913390611c16565b60405180910390a15050505050505050565b6000546001600160a01b03163314610b33576040516311a8a1bb60e31b815260040160405180910390fd5b6001546001600160a01b038281169116148015610b51575060025415155b15610b6f576040516311bc066560e11b815260040160405180910390fd5b6000546001600160a01b03808316911603610b9d57604051634a2fb73f60e11b815260040160405180910390fd5b6107998161148c565b6001546001600160a01b03163314610bd1576040516311a7f27160e11b815260040160405180910390fd5b62093a8060025442610be39190611c56565b11610c01576040516324e0285f60e21b815260040160405180910390fd5b6001546108cb906001600160a01b031661103c565b6000610c21826114da565b92915050565b6000546001600160a01b03163314610c52576040516311a8a1bb60e31b815260040160405180910390fd5b60065460408051918252602082018390527f7f46895145f361561c5e9bbaf45b71269a4399dc3064511f123ebf4c6f04e357910160405180910390a1600855565b8151602014610cce5760405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b604482015260640161066d565b6000634ff746f660e01b83604051602401610ce99190611cb7565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091528251909150606014610d5e5760405162461bcd60e51b815260206004820152600c60248201526b042c8c2e8c240d8cadccee8d60a31b604482015260640161066d565b600080600084806020019051810190610d779190611cca565b92509250925060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663679b6ded34600360009054906101000a90046001600160a01b03166000610dd389600654611520565b6003546007546001600160a01b03909116908190610df2908c90611520565b610dfe8b600854611520565b8e6040518a63ffffffff1660e01b8152600401610e22989796959493929190611cf8565b60206040518083038185885af1158015610e40573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610e659190611d53565b60405190915081907fde92b5b7839f4a2c640f5e3bbb66d415458dadc57a487b0c7fa562ed7c9c896f90600090a250505050505050565b6040516316c2fdb560e21b815260040160405180910390fd5b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b80471015610f6e5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e6365000000604482015260640161066d565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610fbb576040519150601f19603f3d011682016040523d82523d6000602084013e610fc0565b606091505b50509050806110375760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d61792068617665207265766572746564000000000000606482015260840161066d565b505050565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316178155600255600180549091169055565b604080516020808201849052818301859052825180830384018152606090920190925280519101206000906005546040516324b204d360e21b815267ffffffffffffffff871660048201529192506000916001600160a01b03909116906392c8134c9060240161018060405180830381865afa158015611125573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111499190611d7c565b90508181604001511461118d5760405162461bcd60e51b815260206004820152600c60248201526b21636f6e6669726d4461746160a01b604482015260640161066d565b60008160c0015167ffffffffffffffff161180156111b9575060008160e0015167ffffffffffffffff16115b6111ef5760405162461bcd60e51b8152602060048201526007602482015266085cdd185ad95960ca1b604482015260640161066d565b5050505050565b6003546001600160a01b031661120f6020830183611a7d565b6001600160a01b0316146112585760405162461bcd60e51b815260206004820152601060248201526f10b6b4b93937b921b7b73732b1ba37b960811b604482015260640161066d565b6004546000906001600160a01b0316639f0c04bf6112796020850185611a7d565b6112896040860160208701611a7d565b60408601356060870135608088013560a08901356112aa60c08b018b611c69565b6040518963ffffffff1660e01b81526004016112cd989796959493929190611e4e565b602060405180830381865afa1580156112ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061130e9190611d53565b90506113518585808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152508792508591508a9050611536565b505050505050565b81516000906020840161137464ffffffffff851682846116cf565b95945050505050565b60008160ff1660000361139257506000611485565b6113a58460181c6001600160601b031690565b6001600160601b03166113bb60ff841685611eb6565b1115611423576113d48460781c6001600160601b031690565b6113e78560181c6001600160601b031690565b6040516378218d2960e01b81526001600160601b039283166004820152911660248201526044810184905260ff8316606482015260840161066d565b60208260ff1611156114485760405163045df3f960e01b815260040160405180910390fd5b6008820260006114618660781c6001600160601b031690565b6001600160601b031690506000600160ff1b60001984011d91860151909116925050505b9392505050565b42600255600180546001600160a01b0319166001600160a01b0383169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b60006115057f000000000000000000000000000000000000000000000000000000000000000061170c565b6001600160a01b0316826001600160a01b0316149050919050565b600081831061152f5781611485565b5090919050565b6101008451106115775760405162461bcd60e51b815260206004820152600c60248201526b0e0e4dedecc40d8cadccee8d60a31b604482015260640161066d565b835183901c156115ba5760405162461bcd60e51b815260206004820152600e60248201526d10b6b4b734b6b0b610383937b7b360911b604482015260640161066d565b60008381526009602052604090205460ff16156116015760405162461bcd60e51b81526020600482015260056024820152641cdc195b9d60da1b604482015260640161066d565b60048054604051627436d360e01b81526000926001600160a01b0390921691627436d3916116359189918991899101611ec9565b602060405180830381865afa158015611652573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116769190611d53565b90508181146116b05760405162461bcd60e51b815260206004820152600660248201526510b83937b7b360d11b604482015260640161066d565b5050506000908152600960205260409020805460ff1916600117905550565b6000806116dc8385611eb6565b90506040518111156116ec575060005b806000036117015762ffffff19915050611485565b61137485858561186a565b60006001600160a01b03821633146117375760405163253a6fc960e11b815260040160405180910390fd5b6000826001600160a01b031663ab5d89436040518163ffffffff1660e01b8152600401602060405180830381865afa158015611777573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061179b9190611f16565b6001600160a01b03166380648b026040518163ffffffff1660e01b8152600401602060405180830381865afa1580156117d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117fc9190611f16565b90506001600160a01b038116610c215760405162461bcd60e51b815260206004820152602d60248201527f4c6962417262697472756d4c313a2073797374656d206d65737361676573207760448201526c34ba3437baba1039b2b73232b960991b606482015260840161066d565b60006060601883856001600160601b03821682148015611892575086816001600160601b0316145b6118cb5760405162461bcd60e51b815260206004820152600a602482015269085d1c9d5b98d85d195960b21b604482015260640161066d565b96831b90961790911b90941790931b9392505050565b6000602082840312156118f357600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b604051610180810167ffffffffffffffff81118282101715611934576119346118fa565b60405290565b600082601f83011261194b57600080fd5b813567ffffffffffffffff80821115611966576119666118fa565b604051601f8301601f19908116603f0116810190828211818310171561198e5761198e6118fa565b816040528381528660208588010111156119a757600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080604083850312156119da57600080fd5b823567ffffffffffffffff808211156119f257600080fd5b6119fe8683870161193a565b93506020850135915080821115611a1457600080fd5b50611a218582860161193a565b9150509250929050565b600060208284031215611a3d57600080fd5b813567ffffffffffffffff811115611a5457600080fd5b611a608482850161193a565b949350505050565b6001600160a01b038116811461079957600080fd5b600060208284031215611a8f57600080fd5b813561148581611a68565b67ffffffffffffffff8116811461079957600080fd5b600060e08284031215611ac257600080fd5b50919050565b600080600080600080600060c0888a031215611ae357600080fd5b8735611aee81611a9a565b96506020880135955060408801359450606088013567ffffffffffffffff80821115611b1957600080fd5b818a0191508a601f830112611b2d57600080fd5b813581811115611b3c57600080fd5b8b60208260051b8501011115611b5157600080fd5b6020830196508095505060808a0135935060a08a0135915080821115611b7657600080fd5b50611b838a828b01611ab0565b91505092959891949750929550565b6000815180845260005b81811015611bb857602081850181015186830182015201611b9c565b506000602082860101526020601f19601f83011685010191505092915050565b606081526000611beb6060830186611b92565b8281036020840152611bfd8186611b92565b91505060018060a01b0383166040830152949350505050565b604081526000611c296040830185611b92565b905060018060a01b03831660208301529392505050565b634e487b7160e01b600052601160045260246000fd5b81810381811115610c2157610c21611c40565b6000808335601e19843603018112611c8057600080fd5b83018035915067ffffffffffffffff821115611c9b57600080fd5b602001915036819003821315611cb057600080fd5b9250929050565b6020815260006114856020830184611b92565b600080600060608486031215611cdf57600080fd5b8351925060208401519150604084015190509250925092565b600061010060018060a01b03808c1684528a602085015289604085015280891660608501528088166080850152508560a08401528460c08401528060e0840152611d4481840185611b92565b9b9a5050505050505050505050565b600060208284031215611d6557600080fd5b5051919050565b8051611d7781611a9a565b919050565b60006101808284031215611d8f57600080fd5b611d97611910565b825181526020830151602082015260408301516040820152611dbb60608401611d6c565b6060820152611dcc60808401611d6c565b6080820152611ddd60a08401611d6c565b60a0820152611dee60c08401611d6c565b60c0820152611dff60e08401611d6c565b60e0820152610100611e12818501611d6c565b90820152610120611e24848201611d6c565b90820152610140611e36848201611d6c565b90820152610160928301519281019290925250919050565b600060018060a01b03808b168352808a166020840152508760408301528660608301528560808301528460a083015260e060c08301528260e08301526101008385828501376000838501820152601f909301601f191690910190910198975050505050505050565b80820180821115610c2157610c21611c40565b606080825284519082018190526000906020906080840190828801845b82811015611f0257815184529284019290840190600101611ee6565b505050908301949094525060400152919050565b600060208284031215611f2857600080fd5b815161148581611a6856fea26469706673582212202e360d4767dd4b4817476a122d4ff58bdfc9f2542a15a6a466d0b80ca59f4b6364736f6c63430008110033";

type ArbitrumHubConnectorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ArbitrumHubConnectorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ArbitrumHubConnector__factory extends ContractFactory {
  constructor(...args: ArbitrumHubConnectorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _outbox: PromiseOrValue<string>,
    _maxSubmissionCostCap: PromiseOrValue<BigNumberish>,
    _maxGasCap: PromiseOrValue<BigNumberish>,
    _gasPriceCap: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ArbitrumHubConnector> {
    return super.deploy(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _outbox,
      _maxSubmissionCostCap,
      _maxGasCap,
      _gasPriceCap,
      overrides || {}
    ) as Promise<ArbitrumHubConnector>;
  }
  override getDeployTransaction(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _outbox: PromiseOrValue<string>,
    _maxSubmissionCostCap: PromiseOrValue<BigNumberish>,
    _maxGasCap: PromiseOrValue<BigNumberish>,
    _gasPriceCap: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _outbox,
      _maxSubmissionCostCap,
      _maxGasCap,
      _gasPriceCap,
      overrides || {}
    );
  }
  override attach(address: string): ArbitrumHubConnector {
    return super.attach(address) as ArbitrumHubConnector;
  }
  override connect(signer: Signer): ArbitrumHubConnector__factory {
    return super.connect(signer) as ArbitrumHubConnector__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ArbitrumHubConnectorInterface {
    return new utils.Interface(_abi) as ArbitrumHubConnectorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ArbitrumHubConnector {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ArbitrumHubConnector;
  }
}
