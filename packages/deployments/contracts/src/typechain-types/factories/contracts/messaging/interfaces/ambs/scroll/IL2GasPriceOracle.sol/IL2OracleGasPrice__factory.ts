/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IL2OracleGasPrice,
  IL2OracleGasPriceInterface,
} from "../../../../../../../contracts/messaging/interfaces/ambs/scroll/IL2GasPriceOracle.sol/IL2OracleGasPrice";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
    ],
    name: "calculateIntrinsicGasFee",
    outputs: [
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_gasLimit",
        type: "uint256",
      },
    ],
    name: "estimateCrossDomainMessageFee",
    outputs: [
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IL2OracleGasPrice__factory {
  static readonly abi = _abi;
  static createInterface(): IL2OracleGasPriceInterface {
    return new utils.Interface(_abi) as IL2OracleGasPriceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IL2OracleGasPrice {
    return new Contract(address, _abi, signerOrProvider) as IL2OracleGasPrice;
  }
}
