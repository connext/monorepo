/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  PolygonHubConnector,
  PolygonHubConnectorInterface,
} from "../../../../../contracts/messaging/connectors/polygon/PolygonHubConnector";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_domain",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_mirrorDomain",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_amb",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rootManager",
        type: "address",
      },
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
      {
        internalType: "address",
        name: "_checkPointManager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Connector__processMessage_notUsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyOwner_notOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__onlyProposed_notProposedOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__ownershipDelayElapsed_delayNotElapsed",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__proposeNewOwner_noOwnershipChange",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_invalidProposal",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposedOwnable__renounceOwnership_noProposal",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FundsWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageProcessed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "encodedData",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previous",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "current",
        type: "address",
      },
    ],
    name: "MirrorConnectorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "domain",
        type: "uint32",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "mirrorDomain",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "amb",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "rootManager",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "mirrorConnector",
        type: "address",
      },
    ],
    name: "NewConnector",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "proposedOwner",
        type: "address",
      },
    ],
    name: "OwnershipProposed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "AMB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIRROR_DOMAIN",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_MANAGER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SEND_MESSAGE_EVENT_SIG",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptProposedOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "checkpointManager",
    outputs: [
      {
        internalType: "contract ICheckpointManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "delay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fxChildTunnel",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fxRoot",
    outputs: [
      {
        internalType: "contract IFxStateSender",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mirrorConnector",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "processMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "processedExits",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "processedMessageRoots",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newlyProposed",
        type: "address",
      },
    ],
    name: "proposeNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proposed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "inputData",
        type: "bytes",
      },
    ],
    name: "receiveMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounced",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "_encodedData",
        type: "bytes",
      },
    ],
    name: "sendMessage",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_mirrorConnector",
        type: "address",
      },
    ],
    name: "setMirrorConnector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_expected",
        type: "address",
      },
    ],
    name: "verifySender",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
    ],
    name: "withdrawFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6101006040523480156200001257600080fd5b5060405162002de838038062002de883398101604081905262000035916200036e565b8084878782878784848484846200004c33620001ba565b8463ffffffff16600003620000975760405162461bcd60e51b815260206004820152600c60248201526b32b6b83a3c903237b6b0b4b760a11b60448201526064015b60405180910390fd5b6001600160a01b038216620000e35760405162461bcd60e51b815260206004820152601160248201527032b6b83a3c903937b7ba26b0b730b3b2b960791b60448201526064016200008e565b63ffffffff8086166080526001600160a01b0380851660a05283811660c05290851660e0528116156200011b576200011b816200021f565b604080516001600160a01b0385811682528481166020830152831681830152905163ffffffff86811692908816917f4f9c27c2fe3f84576ea469d367d044da53c45e951617e8389f2b5ed8db9d25f09181900360600190a35050600580546001600160a01b039b8c166001600160a01b031991821617909155600480549a909b1699169890981790985550620003ef9c50505050505050505050505050565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316178155600255600180549091169055565b62000235816200024360201b620009241760201c565b6200024081620002ac565b50565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b6006546001600160a01b0316156200031a5760405162461bcd60e51b815260206004820152602a60248201527f467842617365526f6f7454756e6e656c3a204348494c445f54554e4e454c5f4160448201526913149150511657d4d15560b21b60648201526084016200008e565b600680546001600160a01b0319166001600160a01b0392909216919091179055565b805163ffffffff811681146200035157600080fd5b919050565b80516001600160a01b03811681146200035157600080fd5b60008060008060008060c087890312156200038857600080fd5b62000393876200033c565b9550620003a3602088016200033c565b9450620003b36040880162000356565b9350620003c36060880162000356565b9250620003d36080880162000356565b9150620003e360a0880162000356565b90509295509295509295565b60805160a05160c05160e0516129a362000445600039600081816101cf0152610fbe0152600081816102f60152818161053a0152610f8f0152600081816104ad01526105ef015260006102a201526129a36000f3fe60806040526004361061016a5760003560e01c8063715018a6116100d1578063cc3942831161008a578063d69f9d6111610064578063d69f9d611461049b578063db1b7659146104cf578063de9b771f146104ef578063f953cec71461050f57600080fd5b8063cc3942831461043e578063d1851c921461045e578063d232c2201461047c57600080fd5b8063715018a6146103965780638da5cb5b146103ab578063972c4928146103c9578063b1f8100d146103e9578063c0857ba014610409578063c5b350df1461042957600080fd5b806352a9674b1161012357806352a9674b146102905780635bd11efc146102c45780635f61e3ec146102e4578063607f2d421461033057806368742da6146103605780636a42b8f81461038057600080fd5b80630e387de61461017657806314168416146101bd578063370dbaf1146102065780633cf52ffb1461024657806348e6fa231461025b5780634ff746f61461027057600080fd5b3661017157005b600080fd5b34801561018257600080fd5b506101aa7f8c5261668696ce22758910d05bab8f186d6eb247ceac2af2e82c7dc17669b03681565b6040519081526020015b60405180910390f35b3480156101c957600080fd5b506101f17f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff90911681526020016101b4565b34801561021257600080fd5b506102366102213660046123c6565b60086020526000908152604090205460ff1681565b60405190151581526020016101b4565b34801561025257600080fd5b506002546101aa565b61026e6102693660046124a4565b61052f565b005b34801561027c57600080fd5b5061026e61028b366004612508565b6105e4565b34801561029c57600080fd5b506101f17f000000000000000000000000000000000000000000000000000000000000000081565b3480156102d057600080fd5b5061026e6102df366004612552565b61068a565b3480156102f057600080fd5b506103187f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016101b4565b34801561033c57600080fd5b5061023661034b3660046123c6565b60076020526000908152604090205460ff1681565b34801561036c57600080fd5b5061026e61037b366004612552565b6106c1565b34801561038c57600080fd5b5062093a806101aa565b3480156103a257600080fd5b5061026e61073e565b3480156103b757600080fd5b506000546001600160a01b0316610318565b3480156103d557600080fd5b50600654610318906001600160a01b031681565b3480156103f557600080fd5b5061026e610404366004612552565b6107f2565b34801561041557600080fd5b50600554610318906001600160a01b031681565b34801561043557600080fd5b5061026e610890565b34801561044a57600080fd5b50600354610318906001600160a01b031681565b34801561046a57600080fd5b506001546001600160a01b0316610318565b34801561048857600080fd5b506000546001600160a01b031615610236565b3480156104a757600080fd5b506103187f000000000000000000000000000000000000000000000000000000000000000081565b3480156104db57600080fd5b506102366104ea366004612552565b610900565b3480156104fb57600080fd5b50600454610318906001600160a01b031681565b34801561051b57600080fd5b5061026e61052a366004612508565b61090a565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461059b5760405162461bcd60e51b815260206004820152600c60248201526b10b937b7ba26b0b730b3b2b960a11b60448201526064015b60405180910390fd5b6105a5828261098d565b7fdcaa37a042a0087de79018c629bbd29cee82ca80bd9be394e1696bf9e93550778282336040516105d8939291906125bf565b60405180910390a15050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146106455760405162461bcd60e51b81526004016105929060208082526004908201526310a0a6a160e11b604082015260600190565b61064e816109d4565b7fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced813360405161067f9291906125fd565b60405180910390a150565b6000546001600160a01b031633146106b5576040516311a8a1bb60e31b815260040160405180910390fd5b6106be816109ed565b50565b6000546001600160a01b031633146106ec576040516311a8a1bb60e31b815260040160405180910390fd5b476106f782826109ff565b816001600160a01b03167feaff4b37086828766ad3268786972c0cd24259d4c87a80f9d3963a3c3d999b0d8260405161073291815260200190565b60405180910390a25050565b6000546001600160a01b03163314610769576040516311a8a1bb60e31b815260040160405180910390fd5b62093a806002544261077b919061263d565b11610799576040516324e0285f60e21b815260040160405180910390fd5b6002546000036107bc57604051630e4b303f60e21b815260040160405180910390fd5b6001546001600160a01b0316156107e6576040516323295ef960e01b815260040160405180910390fd5b6107f06000610b1d565b565b6000546001600160a01b0316331461081d576040516311a8a1bb60e31b815260040160405180910390fd5b6001546001600160a01b03828116911614801561083b575060025415155b15610859576040516311bc066560e11b815260040160405180910390fd5b6000546001600160a01b0380831691160361088757604051634a2fb73f60e11b815260040160405180910390fd5b6106be81610b82565b6001546001600160a01b031633146108bb576040516311a7f27160e11b815260040160405180910390fd5b62093a80600254426108cd919061263d565b116108eb576040516324e0285f60e21b815260040160405180910390fd5b6001546107f0906001600160a01b0316610b1d565b6000805b92915050565b600061091582610bd0565b905061092081610eb6565b5050565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b8051156109cb5760405162461bcd60e51b815260206004820152600c60248201526b042c8c2e8c240d8cadccee8d60a31b6044820152606401610592565b61092082611073565b6040516316c2fdb560e21b815260040160405180910390fd5b6109f681610924565b6106be816110dc565b80471015610a4f5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e63650000006044820152606401610592565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610a9c576040519150601f19603f3d011682016040523d82523d6000602084013e610aa1565b606091505b5050905080610b185760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d617920686176652072657665727465640000000000006064820152608401610592565b505050565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316178155600255600180549091169055565b42600255600180546001600160a01b0319166001600160a01b0383169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b60606000610bdd8361116a565b90506000610bea826111c9565b90506000610bf7836111f2565b9050600081610c058461121b565b610c0e866113d1565b604051602001610c2093929190612650565b60408051601f1981840301815291815281516020928301206000818152600790935291205490915060ff1615610ca45760405162461bcd60e51b8152602060048201526024808201527f4678526f6f7454756e6e656c3a20455849545f414c52454144595f50524f434560448201526314d4d15160e21b6064820152608401610592565b6000818152600760205260408120805460ff19166001179055610cc6856113ed565b90506000610cd382611537565b9050610cde816115c7565b6006546001600160a01b03908116911614610d495760405162461bcd60e51b815260206004820152602560248201527f4678526f6f7454756e6e656c3a20494e56414c49445f46585f4348494c445f54604482015264155393915360da1b6064820152608401610592565b6000610d54876115f0565b9050610d74610d64846020015190565b87610d6e8a61160c565b84611628565b610dcc5760405162461bcd60e51b815260206004820152602360248201527f4678526f6f7454756e6e656c3a20494e56414c49445f524543454950545f505260448201526227a7a360e91b6064820152608401610592565b610dfa85610dd9896118db565b610de28a6118f7565b84610dec8c611913565b610df58d61192f565b61194b565b506000610e0683611a71565b90507f8c5261668696ce22758910d05bab8f186d6eb247ceac2af2e82c7dc17669b036610e3c610e37836000611aad565b611ae5565b14610e895760405162461bcd60e51b815260206004820152601f60248201527f4678526f6f7454756e6e656c3a20494e56414c49445f5349474e4154555245006044820152606401610592565b6000610e9484611b5f565b806020019051810190610ea7919061267d565b9b9a5050505050505050505050565b8051602014610ef15760405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b6044820152606401610592565b60086000610efe836126f4565b815260208101919091526040016000205460ff1615610f5f5760405162461bcd60e51b815260206004820152601e60248201527f6d65737361676520726f6f7420616c72656164792070726f63657373656400006044820152606401610592565b600160086000610f6e846126f4565b81526020810191909152604001600020805460ff19169115159190911790557f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638e7d93fa7f0000000000000000000000000000000000000000000000000000000000000000610fe6846126f4565b6040516001600160e01b031960e085901b16815263ffffffff9290921660048301526024820152604401600060405180830381600087803b15801561102a57600080fd5b505af115801561103e573d6000803e3d6000fd5b505050507fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced813360405161067f9291906125fd565b6004805460065460405163b472047760e01b81526001600160a01b039283169363b4720477936110a7931691869101612718565b600060405180830381600087803b1580156110c157600080fd5b505af11580156110d5573d6000803e3d6000fd5b5050505050565b6006546001600160a01b0316156111485760405162461bcd60e51b815260206004820152602a60248201527f467842617365526f6f7454756e6e656c3a204348494c445f54554e4e454c5f4160448201526913149150511657d4d15560b21b6064820152608401610592565b600680546001600160a01b0319166001600160a01b0392909216919091179055565b60408051602081019091526060815260006111b46111af8460408051808201825260008082526020918201528151808301909252825182529182019181019190915290565b611b7b565b60408051602081019091529081529392505050565b606061090482600001516008815181106111e5576111e561273c565b6020026020010151611c87565b6000610904826000015160028151811061120e5761120e61273c565b6020026020010151611ae5565b6040805160208101909152600081528151606091901561090457600080611243600086611d24565b60f81c9050600181148061125a57508060ff166003145b156113025760018551600261126f9190612752565b611279919061263d565b67ffffffffffffffff811115611291576112916123df565b6040519080825280601f01601f1916602001820160405280156112bb576020820181803683370190505b50925060006112cb600187611d24565b905080846000815181106112e1576112e161273c565b60200101906001600160f81b031916908160001a9053506001925050611366565b6002855160026113129190612752565b61131c919061263d565b67ffffffffffffffff811115611334576113346123df565b6040519080825280601f01601f19166020018201604052801561135e576020820181803683370190505b509250600091505b825160ff83165b818110156113c75761139661138560ff86168361263d565b611390906002612769565b88611d24565b8582815181106113a8576113a861273c565b60200101906001600160f81b031916908160001a90535060010161136d565b5050505092915050565b6000610904826000015160098151811061120e5761120e61273c565b61141160405180606001604052806060815260200160608152602001600081525090565b61142b82600001516006815181106111e5576111e561273c565b60208281018290526040805180820182526000808252908301528051808201909152825181529181019082015261146181611da5565b156114765761146f81611b7b565b8252611523565b6020820151805160009061148c9060019061263d565b67ffffffffffffffff8111156114a4576114a46123df565b6040519080825280601f01601f1916602001820160405280156114ce576020820181803683370190505b5090506000808360210191508260200190506114ec82828551611de0565b60408051808201825260008082526020918201528151808301909252845182528085019082015261151c90611b7b565b8652505050505b61152c836113d1565b604083015250919050565b60408051608081018252600091810182815260608083019390935281526020810191909152600061158583600001516003815181106115785761157861273c565b6020026020010151611b7b565b83604001518151811061159a5761159a61273c565b6020026020010151905060405180604001604052808281526020016115be83611b7b565b90529392505050565b600061090482602001516000815181106115e3576115e361273c565b6020026020010151611e79565b6000610904826000015160058151811061120e5761120e61273c565b606061090482600001516007815181106111e5576111e561273c565b60008061165c8460408051808201825260008082526020918201528151808301909252825182529182019181019190915290565b9050600061166982611b7b565b90506060808560008061167b8b61121b565b905080516000036116965760009750505050505050506118d3565b855160005b818110156118c95782518411156116be57600099505050505050505050506118d3565b6116e08882815181106116d3576116d361273c565b6020026020010151611e93565b96508680519060200120851461170257600099505050505050505050506118d3565b6117178882815181106115785761157861273c565b955085516011036117ec5782518403611778578d80519060200120611748876010815181106111e5576111e561273c565b805190602001200361176657600199505050505050505050506118d3565b600099505050505050505050506118d3565b600083858151811061178c5761178c61273c565b016020015160f81c905060108111156117b25760009a50505050505050505050506118d3565b6117d7878260ff16815181106117ca576117ca61273c565b6020026020010151611f12565b95506117e4600186612769565b9450506118c1565b8551600203611766576000611817611810886000815181106111e5576111e561273c565b8587611f40565b84519091506118268287612769565b0361187b578e80519060200120611849886001815181106111e5576111e561273c565b80519060200120036118685760019a50505050505050505050506118d3565b60009a50505050505050505050506118d3565b806000036118965760009a50505050505050505050506118d3565b6118a08186612769565b94506118b8876001815181106117ca576117ca61273c565b95506118c19050565b60010161169b565b5050505050505050505b949350505050565b6000610904826000015160038151811061120e5761120e61273c565b6000610904826000015160048151811061120e5761120e61273c565b6000610904826000015160008151811061120e5761120e61273c565b606061090482600001516001815181106111e5576111e561273c565b6005546040516320a9cea560e11b8152600481018490526000918291829182916001600160a01b03909116906341539d4a9060240160a060405180830381865afa15801561199d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119c1919061277c565b5093505092509250611a18828b6119d8919061263d565b6040805160208082018f90528183018e9052606082018d905260808083018d90528351808403909101815260a09092019092528051910120908588612044565b611a645760405162461bcd60e51b815260206004820152601c60248201527f4678526f6f7454756e6e656c3a20494e56414c49445f484541444552000000006044820152606401610592565b9998505050505050505050565b6040805160208101909152606081526040518060200160405280611aa584602001516001815181106115785761157861273c565b905292915050565b60408051808201909152600080825260208201528251805183908110611ad557611ad561273c565b6020026020010151905092915050565b805160009015801590611af9575081516022115b611b0257600080fd5b6000611b1183602001516121b6565b90506000818460000151611b25919061263d565b9050600080838660200151611b3a9190612769565b9050805191506020831015611b5657826020036101000a820491505b50949350505050565b606061090482602001516002815181106111e5576111e561273c565b6060611b8682611da5565b611b8f57600080fd5b6000611b9a8361224a565b905060008167ffffffffffffffff811115611bb757611bb76123df565b604051908082528060200260200182016040528015611bfc57816020015b6040805180820190915260008082526020820152815260200190600190039081611bd55790505b5090506000611c0e85602001516121b6565b8560200151611c1d9190612769565b90506000805b84811015611c7c57611c34836122cf565b9150604051806040016040528083815260200184815250848281518110611c5d57611c5d61273c565b6020908102919091010152611c728284612769565b9250600101611c23565b509195945050505050565b8051606090611c9557600080fd5b6000611ca483602001516121b6565b90506000818460000151611cb8919061263d565b905060008167ffffffffffffffff811115611cd557611cd56123df565b6040519080825280601f01601f191660200182016040528015611cff576020820181803683370190505b5090506000816020019050611b56848760200151611d1d9190612769565b8285612373565b6000611d316002846127df565b15611d6b57601082611d446002866127f3565b81518110611d5457611d5461273c565b0160200151611d66919060f81c612807565b611d9b565b601082611d796002866127f3565b81518110611d8957611d8961273c565b0160200151611d9b919060f81c612829565b60f81b9392505050565b80516000908103611db857506000919050565b6020820151805160001a9060c0821015611dd6575060009392505050565b5060019392505050565b80600003611ded57505050565b611df96001602061284b565b60ff16811115611e335782518252611e12602084612769565b9250611e1f602083612769565b9150611e2c60208261263d565b9050611ded565b80600003611e4057505050565b60006001611e4f83602061263d565b611e5b90610100612948565b611e65919061263d565b935183518516941916939093179091525050565b8051600090601514611e8a57600080fd5b61090482611ae5565b60606000826000015167ffffffffffffffff811115611eb457611eb46123df565b6040519080825280601f01601f191660200182016040528015611ede576020820181803683370190505b5090508051600003611ef05792915050565b6000816020019050611f0b8460200151828660000151612373565b5092915050565b8051600090602114611f2357600080fd5b60008083602001516001611f379190612769565b51949350505050565b60008080611f4d8661121b565b90506000815167ffffffffffffffff811115611f6b57611f6b6123df565b6040519080825280601f01601f191660200182016040528015611f95576020820181803683370190505b5090506000825186611fa79190612769565b9050855b81811015612014576000888281518110611fc757611fc761273c565b01602001516001600160f81b03191690508084611fe48a8561263d565b81518110611ff457611ff461273c565b60200101906001600160f81b031916908160001a90535050600101611fab565b5081805190602001208380519060200120036120335782519350612038565b600093505b50919695505050505050565b60006020825161205491906127df565b156120985760405162461bcd60e51b8152602060048201526014602482015273092dcecc2d8d2c840e0e4dedecc40d8cadccee8d60631b6044820152606401610592565b6000602083516120a891906127f3565b90506120b5816002612948565b85106120fb5760405162461bcd60e51b81526020600482015260156024820152744c65616620696e64657820697320746f6f2062696760581b6044820152606401610592565b82516000908790829061210f906001612769565b905060205b818110156121a75786810151935061212d60028a6127df565b600003612165576040805160208101859052908101859052606001604051602081830303815290604052805190602001209250612192565b60408051602081018690529081018490526060016040516020818303038152906040528051906020012092505b61219d60028a6127f3565b9850602001612114565b50509094149695505050505050565b8051600090811a60808110156121cf5750600092915050565b60b88110806121f657506121e5600160c061284b565b60ff16811180156121f6575060f881105b156122045750600192915050565b60c081101561223857612219600160b861284b565b6122269060ff168261263d565b612231906001612769565b9392505050565b612219600160f861284b565b50919050565b8051600090810361225d57506000919050565b60008061226d84602001516121b6565b846020015161227c9190612769565b90506000846000015185602001516122949190612769565b90505b808210156122c6576122a8826122cf565b6122b29083612769565b9150826122be81612954565b935050612297565b50909392505050565b80516000908190811a60808110156122ea5760019150611f0b565b60b8811015612310576122fe60808261263d565b612309906001612769565b9150611f0b565b60c081101561233d5760b78103600185019450806020036101000a85510460018201810193505050611f0b565b60f8811015612351576122fe60c08261263d565b60019390930151602084900360f7016101000a900490920160f5190192915050565b8060000361238057505050565b61238c6001602061284b565b60ff16811115611e3357825182526123a5602084612769565b92506123b2602083612769565b91506123bf60208261263d565b9050612380565b6000602082840312156123d857600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561241e5761241e6123df565b604052919050565b600067ffffffffffffffff821115612440576124406123df565b50601f01601f191660200190565b600082601f83011261245f57600080fd5b813561247261246d82612426565b6123f5565b81815284602083860101111561248757600080fd5b816020850160208301376000918101602001919091529392505050565b600080604083850312156124b757600080fd5b823567ffffffffffffffff808211156124cf57600080fd5b6124db8683870161244e565b935060208501359150808211156124f157600080fd5b506124fe8582860161244e565b9150509250929050565b60006020828403121561251a57600080fd5b813567ffffffffffffffff81111561253157600080fd5b6118d38482850161244e565b6001600160a01b03811681146106be57600080fd5b60006020828403121561256457600080fd5b81356122318161253d565b60005b8381101561258a578181015183820152602001612572565b50506000910152565b600081518084526125ab81602086016020860161256f565b601f01601f19169290920160200192915050565b6060815260006125d26060830186612593565b82810360208401526125e48186612593565b91505060018060a01b0383166040830152949350505050565b6040815260006126106040830185612593565b905060018060a01b03831660208301529392505050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561090457610904612627565b8381526000835161266881602085016020880161256f565b60209201918201929092526040019392505050565b60006020828403121561268f57600080fd5b815167ffffffffffffffff8111156126a657600080fd5b8201601f810184136126b757600080fd5b80516126c561246d82612426565b8181528560208385010111156126da57600080fd5b6126eb82602083016020860161256f565b95945050505050565b805160208083015191908110156122445760001960209190910360031b1b16919050565b6001600160a01b03831681526040602082018190526000906118d390830184612593565b634e487b7160e01b600052603260045260246000fd5b808202811582820484141761090457610904612627565b8082018082111561090457610904612627565b600080600080600060a0868803121561279457600080fd5b8551945060208601519350604086015192506060860151915060808601516127bb8161253d565b809150509295509295909350565b634e487b7160e01b600052601260045260246000fd5b6000826127ee576127ee6127c9565b500690565b600082612802576128026127c9565b500490565b600060ff83168061281a5761281a6127c9565b8060ff84160691505092915050565b600060ff83168061283c5761283c6127c9565b8060ff84160491505092915050565b60ff828116828216039081111561090457610904612627565b600181815b8085111561289f57816000190482111561288557612885612627565b8085161561289257918102915b93841c9390800290612869565b509250929050565b6000826128b657506001610904565b816128c357506000610904565b81600181146128d957600281146128e3576128ff565b6001915050610904565b60ff8411156128f4576128f4612627565b50506001821b610904565b5060208310610133831016604e8410600b8410161715612922575081810a610904565b61292c8383612864565b806000190482111561294057612940612627565b029392505050565b600061223183836128a7565b60006001820161296657612966612627565b506001019056fea26469706673582212208462b9f6d18b7db17756fd533a8816c0d1bc739f64f86a2f968d9c7d8e3168ff64736f6c63430008110033";

type PolygonHubConnectorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PolygonHubConnectorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PolygonHubConnector__factory extends ContractFactory {
  constructor(...args: PolygonHubConnectorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _checkPointManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PolygonHubConnector> {
    return super.deploy(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _checkPointManager,
      overrides || {}
    ) as Promise<PolygonHubConnector>;
  }
  override getDeployTransaction(
    _domain: PromiseOrValue<BigNumberish>,
    _mirrorDomain: PromiseOrValue<BigNumberish>,
    _amb: PromiseOrValue<string>,
    _rootManager: PromiseOrValue<string>,
    _mirrorConnector: PromiseOrValue<string>,
    _checkPointManager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _domain,
      _mirrorDomain,
      _amb,
      _rootManager,
      _mirrorConnector,
      _checkPointManager,
      overrides || {}
    );
  }
  override attach(address: string): PolygonHubConnector {
    return super.attach(address) as PolygonHubConnector;
  }
  override connect(signer: Signer): PolygonHubConnector__factory {
    return super.connect(signer) as PolygonHubConnector__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PolygonHubConnectorInterface {
    return new utils.Interface(_abi) as PolygonHubConnectorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PolygonHubConnector {
    return new Contract(address, _abi, signerOrProvider) as PolygonHubConnector;
  }
}
