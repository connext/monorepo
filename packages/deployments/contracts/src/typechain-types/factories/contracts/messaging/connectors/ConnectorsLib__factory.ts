/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  ConnectorsLib,
  ConnectorsLibInterface,
} from "../../../../contracts/messaging/connectors/ConnectorsLib";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "checkMessageLength",
    outputs: [
      {
        internalType: "bool",
        name: "_validLength",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x61016061003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c8063a3911a0a1461003a575b600080fd5b61004f610048366004610079565b5160201490565b604051901515815260200160405180910390f35b634e487b7160e01b600052604160045260246000fd5b60006020828403121561008b57600080fd5b813567ffffffffffffffff808211156100a357600080fd5b818401915084601f8301126100b757600080fd5b8135818111156100c9576100c9610063565b604051601f8201601f19908116603f011681019083821181831017156100f1576100f1610063565b8160405282815287602084870101111561010a57600080fd5b82602086016020830137600092810160200192909252509594505050505056fea2646970667358221220bf450c2ea27d6a79c7cbe8bc34452108e05f336abe4b25983f256cd9f5d61b6e64736f6c63430008110033";

type ConnectorsLibConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ConnectorsLibConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ConnectorsLib__factory extends ContractFactory {
  constructor(...args: ConnectorsLibConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ConnectorsLib> {
    return super.deploy(overrides || {}) as Promise<ConnectorsLib>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ConnectorsLib {
    return super.attach(address) as ConnectorsLib;
  }
  override connect(signer: Signer): ConnectorsLib__factory {
    return super.connect(signer) as ConnectorsLib__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ConnectorsLibInterface {
    return new utils.Interface(_abi) as ConnectorsLibInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ConnectorsLib {
    return new Contract(address, _abi, signerOrProvider) as ConnectorsLib;
  }
}
